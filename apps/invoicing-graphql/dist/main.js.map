{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/invoicing-graphql/src/app/context.ts","webpack:///./apps/invoicing-graphql/src/app/resolvers/echo.ts","webpack:///./apps/invoicing-graphql/src/app/resolvers/index.ts","webpack:///./apps/invoicing-graphql/src/app/resolvers/invoice.ts","webpack:///./apps/invoicing-graphql/src/app/schema/index.ts","webpack:///./apps/invoicing-graphql/src/app/schema/schema.graphql","webpack:///./apps/invoicing-graphql/src/app/server.ts","webpack:///./apps/invoicing-graphql/src/main.ts","webpack:///./libs/shared/src/index.ts","webpack:///./libs/shared/src/lib/core/domain/AggregateRoot.ts","webpack:///./libs/shared/src/lib/core/domain/Entity.ts","webpack:///./libs/shared/src/lib/core/domain/Identifier.ts","webpack:///./libs/shared/src/lib/core/domain/UniqueEntityID.ts","webpack:///./libs/shared/src/lib/core/domain/ValueObject.ts","webpack:///./libs/shared/src/lib/core/domain/WatchedList.ts","webpack:///./libs/shared/src/lib/core/domain/events/DomainEvents.ts","webpack:///./libs/shared/src/lib/core/logic/Guard.ts","webpack:///./libs/shared/src/lib/core/logic/Left.ts","webpack:///./libs/shared/src/lib/core/logic/Result.ts","webpack:///./libs/shared/src/lib/core/logic/Right.ts","webpack:///./libs/shared/src/lib/domain/Amount.ts","webpack:///./libs/shared/src/lib/domain/Email.ts","webpack:///./libs/shared/src/lib/domain/File.ts","webpack:///./libs/shared/src/lib/domain/Name.ts","webpack:///./libs/shared/src/lib/domain/PhoneNumber.ts","webpack:///./libs/shared/src/lib/domain/authorization/AccessControl.ts","webpack:///./libs/shared/src/lib/domain/authorization/decorators/Authorize.ts","webpack:///./libs/shared/src/lib/domain/authorization/index.ts","webpack:///./libs/shared/src/lib/domain/reductions/BaseReductionCreator.ts","webpack:///./libs/shared/src/lib/domain/reductions/Coupon.ts","webpack:///./libs/shared/src/lib/domain/reductions/CouponCreator.ts","webpack:///./libs/shared/src/lib/domain/reductions/Discount.ts","webpack:///./libs/shared/src/lib/domain/reductions/DiscountCreator.ts","webpack:///./libs/shared/src/lib/domain/reductions/Reduction.ts","webpack:///./libs/shared/src/lib/domain/reductions/ReductionFactory.ts","webpack:///./libs/shared/src/lib/domain/reductions/ReductionId.ts","webpack:///./libs/shared/src/lib/domain/reductions/Waiver.ts","webpack:///./libs/shared/src/lib/domain/reductions/WaiverCreator.ts","webpack:///./libs/shared/src/lib/domain/reductions/policies/PoliciesRegister.ts","webpack:///./libs/shared/src/lib/domain/reductions/policies/SanctionedCountryPolicy.ts","webpack:///./libs/shared/src/lib/domain/reductions/policies/SanctionedCountryRule.ts","webpack:///./libs/shared/src/lib/domain/reductions/policies/WaivedCountryPolicy.ts","webpack:///./libs/shared/src/lib/domain/reductions/policies/WaivedCountryRule.ts","webpack:///./libs/shared/src/lib/infrastructure/AbstractBaseDBRepo.ts","webpack:///./libs/shared/src/lib/infrastructure/Mapper.ts","webpack:///./libs/shared/src/lib/infrastructure/RepoError.ts","webpack:///./libs/shared/src/lib/infrastructure/database/knex/index.ts","webpack:///./libs/shared/src/lib/infrastructure/database/knex/knexfile.ts","webpack:///./libs/shared/src/lib/modules/addresses/domain/AddressId.ts","webpack:///./libs/shared/src/lib/modules/articles/domain/Article.ts","webpack:///./libs/shared/src/lib/modules/articles/domain/ArticleId.ts","webpack:///./libs/shared/src/lib/modules/articles/domain/Price.ts","webpack:///./libs/shared/src/lib/modules/articles/domain/PriceId.ts","webpack:///./libs/shared/src/lib/modules/articles/domain/PriceValue.ts","webpack:///./libs/shared/src/lib/modules/articles/mappers/ArticleMap.ts","webpack:///./libs/shared/src/lib/modules/articles/mappers/PriceMap.ts","webpack:///./libs/shared/src/lib/modules/articles/repos/implementations/knexArticleRepo.ts","webpack:///./libs/shared/src/lib/modules/articles/repos/index.ts","webpack:///./libs/shared/src/lib/modules/authors/domain/Author.ts","webpack:///./libs/shared/src/lib/modules/catalogs/domain/CatalogItem.ts","webpack:///./libs/shared/src/lib/modules/catalogs/mappers/CatalogMap.ts","webpack:///./libs/shared/src/lib/modules/catalogs/repos/implementations/knexCatalogRepo.ts","webpack:///./libs/shared/src/lib/modules/catalogs/repos/index.ts","webpack:///./libs/shared/src/lib/modules/catalogs/usecases/catalogItems/addCatalogItemToCatalog/addCatalogItemToCatalogUseCase.ts","webpack:///./libs/shared/src/lib/modules/catalogs/usecases/catalogItems/getAllCatalogItems/getAllCatalogItemsUseCase.ts","webpack:///./libs/shared/src/lib/modules/coupons/mappers/CouponMap.ts","webpack:///./libs/shared/src/lib/modules/coupons/repos/implementations/knexCouponRepo.ts","webpack:///./libs/shared/src/lib/modules/coupons/repos/index.ts","webpack:///./libs/shared/src/lib/modules/invoices/domain/Invoice.ts","webpack:///./libs/shared/src/lib/modules/invoices/domain/InvoiceId.ts","webpack:///./libs/shared/src/lib/modules/invoices/domain/InvoiceItem.ts","webpack:///./libs/shared/src/lib/modules/invoices/domain/InvoiceItemId.ts","webpack:///./libs/shared/src/lib/modules/invoices/domain/InvoiceItems.ts","webpack:///./libs/shared/src/lib/modules/invoices/domain/ManuscriptId.ts","webpack:///./libs/shared/src/lib/modules/invoices/domain/events/invoicePaidEvent.ts","webpack:///./libs/shared/src/lib/modules/invoices/domain/events/invoiceSentEvent.ts","webpack:///./libs/shared/src/lib/modules/invoices/domain/policies/PoliciesRegister.ts","webpack:///./libs/shared/src/lib/modules/invoices/domain/policies/UKVATHardCopyPolicy.ts","webpack:///./libs/shared/src/lib/modules/invoices/domain/policies/UKVATHardCopyRule.ts","webpack:///./libs/shared/src/lib/modules/invoices/domain/policies/UKVATTreatmentArticleProcessingChargesPolicy.ts","webpack:///./libs/shared/src/lib/modules/invoices/domain/policies/UKVATTreatmentArticleProcessingChargesRule.ts","webpack:///./libs/shared/src/lib/modules/invoices/domain/policies/VATTreatmentPublicationNotOwnedPolicy.ts","webpack:///./libs/shared/src/lib/modules/invoices/mappers/InvoiceItemMap.ts","webpack:///./libs/shared/src/lib/modules/invoices/mappers/InvoiceMap.ts","webpack:///./libs/shared/src/lib/modules/invoices/repos/implementations/knexInvoiceRepo.ts","webpack:///./libs/shared/src/lib/modules/invoices/repos/index.ts","webpack:///./libs/shared/src/lib/modules/invoices/usecases/createInvoice/createInvoice.ts","webpack:///./libs/shared/src/lib/modules/invoices/usecases/deleteInvoice/deleteInvoice.ts","webpack:///./libs/shared/src/lib/modules/invoices/usecases/getInvoiceDetails/getInvoiceDetails.ts","webpack:///./libs/shared/src/lib/modules/payers/domain/Payer.ts","webpack:///./libs/shared/src/lib/modules/payers/domain/PayerId.ts","webpack:///./libs/shared/src/lib/modules/payers/domain/PayerName.ts","webpack:///./libs/shared/src/lib/modules/payers/domain/PayerTitle.ts","webpack:///./libs/shared/src/lib/modules/payers/domain/PayerType.ts","webpack:///./libs/shared/src/lib/modules/payers/mapper/Payer.ts","webpack:///./libs/shared/src/lib/modules/payments/domain/Payment.ts","webpack:///./libs/shared/src/lib/modules/payments/domain/PaymentId.ts","webpack:///./libs/shared/src/lib/modules/payments/domain/PaymentMethod.ts","webpack:///./libs/shared/src/lib/modules/payments/domain/PaymentMethodId.ts","webpack:///./libs/shared/src/lib/modules/payments/domain/contracts/PaymentService.ts","webpack:///./libs/shared/src/lib/modules/payments/domain/strategies/CreditCard.ts","webpack:///./libs/shared/src/lib/modules/payments/domain/strategies/CreditCardPayment.ts","webpack:///./libs/shared/src/lib/modules/payments/domain/strategies/PaymentFactory.ts","webpack:///./libs/shared/src/lib/modules/payments/domain/strategies/PaymentStrategy.ts","webpack:///./libs/shared/src/lib/modules/payments/infrastructure/gateways/braintree/gateway.ts","webpack:///./libs/shared/src/lib/modules/payments/mapper/Payment.ts","webpack:///./libs/shared/src/lib/modules/payments/mapper/PaymentMethod.ts","webpack:///./libs/shared/src/lib/modules/transactions/domain/Invoices.ts","webpack:///./libs/shared/src/lib/modules/transactions/domain/Transaction.ts","webpack:///./libs/shared/src/lib/modules/transactions/domain/TransactionAmount.ts","webpack:///./libs/shared/src/lib/modules/transactions/domain/TransactionId.ts","webpack:///./libs/shared/src/lib/modules/transactions/mappers/TransactionMap.ts","webpack:///./libs/shared/src/lib/modules/transactions/repos/implementations/knexTransactionRepo.ts","webpack:///./libs/shared/src/lib/modules/transactions/repos/index.ts","webpack:///./libs/shared/src/lib/modules/transactions/usecases/createTransaction/createTransaction.ts","webpack:///./libs/shared/src/lib/modules/transactions/usecases/getTransaction/getTransaction.ts","webpack:///./libs/shared/src/lib/modules/transactions/usecases/getTransactions/getTransactions.ts","webpack:///./libs/shared/src/lib/modules/users/domain/enums/Roles.ts","webpack:///./libs/shared/src/lib/shared.ts","webpack:///./libs/shared/src/lib/utils/TextUtil.ts","webpack:///external \"accesscontrol-plus\"","webpack:///external \"apollo-server\"","webpack:///external \"braintree\"","webpack:///external \"dotenv\"","webpack:///external \"knex\"","webpack:///external \"lodash\"","webpack:///external \"path\"","webpack:///external \"shallow-equal-object\"","webpack:///external \"tslib\"","webpack:///external \"uuid/v4\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import {Knex, KnexInvoiceRepo, KnexTransactionRepo} from '@hindawi/shared';\n\nexport interface ReposContext {\n  invoice: KnexInvoiceRepo;\n  transaction: KnexTransactionRepo;\n}\n\nexport interface Context {\n  repos: ReposContext;\n}\n\nexport type ContextCreator = (params: any) => Context;\n\nexport function makeContext(db: Knex): ContextCreator {\n  return () => ({\n    repos: {\n      invoice: new KnexInvoiceRepo(db),\n      transaction: new KnexTransactionRepo(db)\n    }\n  });\n}\n","import {Resolvers} from '../schema';\nimport {Context} from '../context';\n\nexport const echo: Resolvers<Context> = {\n  Query: {\n    echo(parent, args) {\n      return args.value;\n    }\n  }\n};\n","import {merge} from 'lodash';\nimport {Resolvers} from '../schema';\nimport {Context} from '../context';\n\nimport {echo} from './echo';\nimport {invoice} from './invoice';\n\nexport const resolvers: Resolvers<Context> = merge({}, echo, invoice);\n","import {\n  GetInvoiceDetailsRequestDTO,\n  GetInvoiceDetailsUsecase,\n  DeleteInvoiceUsecase,\n  DeleteInvoiceRequestDTO,\n  CreateInvoiceUsecase,\n  CreateInvoiceRequestDTO,\n  InvoiceMap\n} from '@hindawi/shared';\n\nimport {Resolvers} from '../schema';\nimport {Context} from '../context';\n\nexport const invoice: Resolvers<Context> = {\n  Query: {\n    async invoice(parent, args, context, info) {\n      const {repos} = context;\n      const usecase = new GetInvoiceDetailsUsecase(repos.invoice);\n\n      const request: GetInvoiceDetailsRequestDTO = {\n        invoiceId: args.id\n      };\n\n      const result = await usecase.execute(request);\n\n      if (!result.isSuccess) {\n        return undefined;\n      }\n\n      const invoice = result.getValue();\n\n      return {\n        id: invoice.id.toString(),\n        invoice\n        // totalAmount: invoice.totalAmount,\n        // netAmount: invoice.netAmount\n      };\n    }\n  },\n\n  Mutation: {\n    async deleteInvoice(parent, args, context) {\n      const {repos} = context;\n      const usecase = new DeleteInvoiceUsecase(repos.invoice);\n\n      const request: DeleteInvoiceRequestDTO = {\n        invoiceId: args.id\n      };\n\n      const result = await usecase.execute(request);\n\n      return result.isSuccess;\n    },\n\n    async createInvoice(parent, args, context) {\n      const {repos} = context;\n      const usecase = new CreateInvoiceUsecase(\n        repos.invoice,\n        repos.transaction\n      );\n\n      const request: CreateInvoiceRequestDTO = {\n        transactionId: 'transaction-1'\n      };\n\n      const result = await usecase.execute(request);\n\n      return InvoiceMap.toPersistence(result.getValue());\n    }\n  }\n};\n","// eslint-disable-next-line\nconst typeDefs = require('./schema.graphql');\n\nexport {typeDefs};\nexport * from './generated';\n","module.exports = \"type Invoice {\\n  id: String\\n  totalAmount: Float\\n  netAmount: Float\\n}\\n\\ntype Query {\\n  invoice(id: String): Invoice!\\n  echo(value: String): String\\n}\\n\\ntype Mutation {\\n  createInvoice(totalAmount: Float): Invoice\\n  deleteInvoice(id: String!): Boolean\\n}\\n\"","import {ApolloServer} from 'apollo-server';\n\nimport {ContextCreator} from './context';\nimport {typeDefs} from './schema';\nimport {resolvers} from './resolvers';\n\nexport function makeServer(context: ContextCreator): ApolloServer {\n  return new ApolloServer({\n    typeDefs,\n    resolvers,\n    context\n  });\n}\n","import {KnexDB} from '@hindawi/shared';\n\nimport {makeContext} from './app/context';\nimport {makeServer} from './app/server';\n\nconst db = KnexDB();\nconst context = makeContext(db);\nconst server = makeServer(context);\n\nserver.listen().then(({url}) => {\n  console.log(`🚀 Server ready at ${url}`);\n});\n","export * from './lib/shared';\n","import {DomainEventContract} from './events/contracts/DomainEvent';\nimport {DomainEvents} from './events/DomainEvents';\nimport {Entity} from './Entity';\nimport {UniqueEntityID} from './UniqueEntityID';\n\nexport abstract class AggregateRoot<T> extends Entity<T> {\n  private _domainEvents: DomainEventContract[] = [];\n\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  get domainEvents(): DomainEventContract[] {\n    return this._domainEvents;\n  }\n\n  protected addDomainEvent(domainEvent: DomainEventContract): void {\n    // Add the domain event to this aggregate's list of domain events\n    this._domainEvents.push(domainEvent);\n    // Add this aggregate instance to the domain event's list of aggregates who's\n    // events it eventually needs to dispatch.\n    DomainEvents.markAggregateForDispatch(this);\n    // Log the domain event\n    this.logDomainEventAdded(domainEvent);\n  }\n\n  public clearEvents(): void {\n    this._domainEvents.splice(0, this._domainEvents.length);\n  }\n\n  private logDomainEventAdded(domainEvent: DomainEventContract): void {\n    const thisClass = Reflect.getPrototypeOf(this);\n    const domainEventClass = Reflect.getPrototypeOf(domainEvent);\n    console.info(\n      `[Domain Event Created]:`,\n      thisClass.constructor.name,\n      '==>',\n      domainEventClass.constructor.name\n    );\n  }\n}\n","import {UniqueEntityID} from './UniqueEntityID';\n\nexport abstract class Entity<T> {\n  protected readonly _id: UniqueEntityID;\n  public readonly props: T;\n\n  constructor(props: T, id?: UniqueEntityID) {\n    this._id = id ? id : new UniqueEntityID();\n    this.props = props;\n  }\n\n  public equals(object?: Entity<T>): boolean {\n    if (object == null || object == undefined) {\n      return false;\n    }\n\n    if (this === object) {\n      return true;\n    }\n\n    if (!isEntity(object)) {\n      return false;\n    }\n\n    return this._id.equals(object._id);\n  }\n}\n\nconst isEntity = (v: any): v is Entity<any> => {\n  return v instanceof Entity;\n};\n","export class Identifier<T> {\n  constructor(private value: T) {\n    this.value = value;\n  }\n\n  equals(id?: Identifier<T>): boolean {\n    if (id === null || id === undefined) {\n      return false;\n    }\n    if (!(id instanceof this.constructor)) {\n      return false;\n    }\n    return id.toValue() === this.value;\n  }\n\n  toString() {\n    return String(this.value);\n  }\n\n  /**\n   * Return raw value of identifier\n   */\n\n  toValue(): T {\n    return this.value;\n  }\n}\n","import uuid from 'uuid/v4';\nimport {Identifier} from './Identifier';\n\nexport class UniqueEntityID extends Identifier<string | number> {\n  constructor(id?: string | number) {\n    super(id ? id : uuid());\n  }\n}\n","import {shallowEqual} from 'shallow-equal-object';\n\n/**\n * @description ValueObjects are objects that we determine their\n * equality through their structural property.\n */\n\nexport abstract class ValueObject<T extends Partial<Record<string, any>>> {\n  public readonly props: Readonly<T>;\n\n  constructor(props: T) {\n    this.props = Object.freeze(props);\n  }\n\n  public equals(vo?: ValueObject<T>): boolean {\n    if (vo === null || vo === undefined) {\n      return false;\n    }\n    if (vo.props === undefined) {\n      return false;\n    }\n    return shallowEqual(this.props, vo.props);\n  }\n}\n","export abstract class WatchedList<T> {\n  public currentItems: T[];\n  private initial: T[];\n  private new: T[];\n  private removed: T[];\n\n  constructor(initialItems?: T[]) {\n    this.currentItems = initialItems ? initialItems : [];\n    this.initial = initialItems ? initialItems : [];\n    this.new = [];\n    this.removed = [];\n  }\n\n  abstract compareItems(a: T, b: T): boolean;\n\n  public getItems(): T[] {\n    return this.currentItems;\n  }\n\n  public getNewItems(): T[] {\n    return this.new;\n  }\n\n  public getRemovedItems(): T[] {\n    return this.removed;\n  }\n\n  private isCurrentItem(item: T): boolean {\n    return (\n      this.currentItems.filter((v: T) => this.compareItems(item, v)).length !==\n      0\n    );\n  }\n\n  private isNewItem(item: T): boolean {\n    return this.new.filter((v: T) => this.compareItems(item, v)).length !== 0;\n  }\n\n  private isRemovedItem(item: T): boolean {\n    return (\n      this.removed.filter((v: T) => this.compareItems(item, v)).length !== 0\n    );\n  }\n\n  private removeFromNew(item: T): void {\n    this.new = this.new.filter(v => !this.compareItems(v, item));\n  }\n\n  private removeFromCurrent(item: T): void {\n    this.currentItems = this.currentItems.filter(\n      v => !this.compareItems(item, v)\n    );\n  }\n\n  private removeFromRemoved(item: T): void {\n    this.removed = this.removed.filter(v => !this.compareItems(item, v));\n  }\n\n  private wasAddedInitially(item: T): boolean {\n    return (\n      this.initial.filter((v: T) => this.compareItems(item, v)).length !== 0\n    );\n  }\n\n  public exists(item: T): boolean {\n    return this.isCurrentItem(item);\n  }\n\n  public add(item: T): void {\n    if (this.isRemovedItem(item)) {\n      this.removeFromRemoved(item);\n    }\n\n    if (!this.isNewItem(item) && !this.wasAddedInitially(item)) {\n      this.new.push(item);\n    }\n\n    if (!this.isCurrentItem(item)) {\n      this.currentItems.push(item);\n    }\n  }\n\n  public remove(item: T): void {\n    this.removeFromCurrent(item);\n\n    if (this.isNewItem(item)) {\n      this.removeFromNew(item);\n      return;\n    }\n\n    if (!this.isRemovedItem(item)) {\n      this.removed.push(item);\n    }\n  }\n}\n","import {AggregateRoot} from '../AggregateRoot';\nimport {UniqueEntityID} from '../UniqueEntityID';\nimport {DomainEventContract} from './contracts/DomainEvent';\n\nexport class DomainEvents {\n  private static handlersMap = {};\n  private static markedAggregates: AggregateRoot<any>[] = [];\n\n  /**\n   * @method markAggregateForDispatch\n   * @static\n   * @desc Called by aggregate root objects that have created domain\n   * events to eventually be dispatched when the infrastructure commits\n   * the unit of work.\n   */\n\n  public static markAggregateForDispatch(aggregate: AggregateRoot<any>): void {\n    const aggregateFound = !!this.findMarkedAggregateByID(aggregate.id);\n\n    if (!aggregateFound) {\n      this.markedAggregates.push(aggregate);\n    }\n  }\n\n  private static dispatchAggregateEvents(aggregate: AggregateRoot<any>): void {\n    aggregate.domainEvents.forEach((event: DomainEventContract) =>\n      this.dispatch(event)\n    );\n  }\n\n  private static removeAggregateFromMarkedDispatchList(\n    aggregate: AggregateRoot<any>\n  ): void {\n    const index = this.markedAggregates.findIndex(a => a.equals(aggregate));\n    this.markedAggregates.splice(index, 1);\n  }\n\n  private static findMarkedAggregateByID(\n    id: UniqueEntityID\n  ): AggregateRoot<any> {\n    let found: AggregateRoot<any> = null;\n    for (const aggregate of this.markedAggregates) {\n      if (aggregate.id.equals(id)) {\n        found = aggregate;\n      }\n    }\n\n    return found;\n  }\n\n  public static dispatchEventsForAggregate(id: UniqueEntityID): void {\n    const aggregate = this.findMarkedAggregateByID(id);\n\n    if (aggregate) {\n      this.dispatchAggregateEvents(aggregate);\n      aggregate.clearEvents();\n      this.removeAggregateFromMarkedDispatchList(aggregate);\n    }\n  }\n\n  public static register(\n    callback: (event: DomainEventContract) => void,\n    eventClassName: string\n  ): void {\n    if (!Object.hasOwnProperty.call(this.handlersMap, eventClassName)) {\n      this.handlersMap[eventClassName] = [];\n    }\n    this.handlersMap[eventClassName].push(callback);\n  }\n\n  public static clearHandlers(): void {\n    this.handlersMap = {};\n  }\n\n  public static clearMarkedAggregates(): void {\n    this.markedAggregates = [];\n  }\n\n  private static dispatch(event: DomainEventContract): void {\n    const eventClassName: string = event.constructor.name;\n\n    if (Object.hasOwnProperty.call(this.handlersMap, eventClassName)) {\n      const handlers: any[] = this.handlersMap[eventClassName];\n      for (const handler of handlers) {\n        handler(event);\n      }\n    }\n  }\n}\n","export interface GuardResult {\n  succeeded: boolean;\n  message?: string;\n}\n\nexport interface GuardArgument {\n  argument: any;\n  argumentName: string;\n}\n\nexport type GuardArgumentCollection = GuardArgument[];\n\nexport class Guard {\n  public static combine(guardResults: GuardResult[]): GuardResult {\n    for (let result of guardResults) {\n      if (result.succeeded === false) return result;\n    }\n\n    return {succeeded: true};\n  }\n\n  public static greaterThan(\n    minValue: number,\n    actualValue: number\n  ): GuardResult {\n    return actualValue > minValue\n      ? {succeeded: true}\n      : {\n          succeeded: false,\n          message: `Number given {${actualValue}} is not greater than {${minValue}}`\n        };\n  }\n\n  public static againstNullOrUndefined(\n    argument: any,\n    argumentName: string\n  ): GuardResult {\n    if (argument === null || argument === undefined) {\n      return {\n        succeeded: false,\n        message: `${argumentName} is null or undefined`\n      };\n    } else {\n      return {succeeded: true};\n    }\n  }\n\n  public static againstAtLeast(numChars: number, text: string): GuardResult {\n    return text.length >= numChars\n      ? {succeeded: true}\n      : {\n          succeeded: false,\n          message: `Text is not at least ${numChars} chars.`\n        };\n  }\n\n  public static againstAtMost(numChars: number, text: string): GuardResult {\n    return text.length <= numChars\n      ? {succeeded: true}\n      : {\n          succeeded: false,\n          message: `Text is greater than ${numChars} chars.`\n        };\n  }\n\n  public static againstNullOrUndefinedBulk(\n    args: GuardArgumentCollection\n  ): GuardResult {\n    for (let arg of args) {\n      const result = this.againstNullOrUndefined(\n        arg.argument,\n        arg.argumentName\n      );\n      if (!result.succeeded) return result;\n    }\n\n    return {succeeded: true, message: ''};\n  }\n\n  public static isOneOf(\n    value: any,\n    validValues: any[],\n    argumentName: string\n  ): GuardResult {\n    let isValid = false;\n    for (let validValue of validValues) {\n      if (value === validValue) {\n        isValid = true;\n      }\n    }\n\n    if (isValid) {\n      return {succeeded: true};\n    } else {\n      return {\n        succeeded: false,\n        message: `${argumentName} isn't oneOf the correct types in ${JSON.stringify(\n          validValues\n        )}. Got \"${value}\".`\n      };\n    }\n  }\n\n  public static inRange(\n    num: number,\n    min: number,\n    max: number,\n    argumentName: string\n  ): GuardResult {\n    const isInRange = num >= min && num <= max;\n    if (!isInRange) {\n      return {\n        succeeded: false,\n        message: `${argumentName} is not within range ${min} to ${max}.`\n      };\n    } else {\n      return {succeeded: true};\n    }\n  }\n\n  public static allInRange(\n    numbers: number[],\n    min: number,\n    max: number,\n    argumentName: string\n  ): GuardResult {\n    let failingResult;\n    for (let num of numbers) {\n      const numIsInRangeResult = this.inRange(num, min, max, argumentName);\n      if (!numIsInRangeResult.succeeded) failingResult = numIsInRangeResult;\n    }\n\n    if (failingResult) {\n      return {\n        succeeded: false,\n        message: `${argumentName} is not within the range.`\n      };\n    } else {\n      return {succeeded: true};\n    }\n  }\n}\n","import {Right} from './Right';\n\nexport class Left<L, A> {\n  readonly value: L;\n\n  constructor(value: L) {\n    this.value = value;\n  }\n\n  isLeft(): this is Left<L, A> {\n    return true;\n  }\n\n  isRight(): this is Right<L, A> {\n    return false;\n  }\n}\n","import {Left} from './Left';\nimport {Right} from './Right';\n\nexport type Either<L, A> = Left<L, A> | Right<L, A>;\n\nexport const left = <L, A>(l: L): Either<L, A> => {\n  return new Left(l);\n};\n\nexport const right = <L, A>(a: A): Either<L, A> => {\n  return new Right<L, A>(a);\n};\n\nexport class Result<T> {\n  public isSuccess: boolean;\n  public isFailure: boolean;\n  public error: T | string;\n  private _value: T;\n\n  public constructor(isSuccess: boolean, error?: T | string, value?: T) {\n    if (isSuccess && error) {\n      throw new Error(\n        'InvalidOperation: A result cannot be successful and contain an error'\n      );\n    }\n    if (!isSuccess && !error) {\n      throw new Error(\n        'InvalidOperation: A failing result needs to contain an error message'\n      );\n    }\n\n    this.isSuccess = isSuccess;\n    this.isFailure = !isSuccess;\n    this.error = error;\n    this._value = value;\n\n    Object.freeze(this);\n  }\n\n  public getValue(): T {\n    if (!this.isSuccess) {\n      console.log(this.error);\n      throw new Error(\n        \"Can't get the value of an error result. Use 'errorValue' instead.\"\n      );\n    }\n\n    return this._value;\n  }\n\n  public errorValue(): T {\n    return this.error as T;\n  }\n\n  public static ok<U>(value?: U): Result<U> {\n    return new Result<U>(true, null, value);\n  }\n\n  public static fail<U>(error: any): Result<U> {\n    return new Result<U>(false, error);\n  }\n\n  public static combine(results: Result<any>[]): Result<any> {\n    for (const result of results) {\n      if (result.isFailure) return result;\n    }\n    return Result.ok();\n  }\n}\n","import {Left} from './Left';\n\nexport class Right<L, A> {\n  readonly value: A;\n\n  constructor(value: A) {\n    this.value = value;\n  }\n\n  isLeft(): this is Left<L, A> {\n    return false;\n  }\n\n  isRight(): this is Right<L, A> {\n    return true;\n  }\n}\n","import {ValueObject} from '../core/domain/ValueObject';\nimport {Result} from '../core/logic/Result';\n\ninterface AmountProps {\n  value: number;\n}\n\nexport class Amount extends ValueObject<AmountProps> {\n  get value(): number {\n    return this.props.value;\n  }\n\n  private constructor(props: AmountProps) {\n    super(props);\n  }\n\n  public static create(value: number): Result<Amount> {\n    if (isNaN(value) || value === 0 || value < 0) {\n      return Result.fail<Amount>('Must provide a valid amount');\n    } else {\n      return Result.ok<Amount>(new Amount({value}));\n    }\n  }\n}\n","import {ValueObject} from '../core/domain/ValueObject';\nimport {Result} from '../core/logic/Result';\nimport {Guard} from '../core/logic/Guard';\n\ninterface EmailProps {\n  value: string;\n}\n\nexport class Email extends ValueObject<EmailProps> {\n  get value(): string {\n    return this.props.value;\n  }\n\n  private constructor(props: EmailProps) {\n    super(props);\n  }\n\n  public static create(email: string): Result<Email> {\n    const guardResult = Guard.againstNullOrUndefined(email, 'email');\n    if (!guardResult.succeeded) {\n      return Result.fail<Email>(guardResult.message);\n    } else {\n      return Result.ok<Email>(new Email({value: email}));\n    }\n  }\n}\n","import {ValueObject} from '../core/domain/ValueObject';\nimport {Result} from '../core/logic/Result';\nimport {Guard} from '../core/logic/Guard';\n\ninterface FileProps {\n  src: string;\n  name?: string;\n  size?: number;\n  type?: string;\n  metadata?: Record<string, string>;\n}\n\nexport class File extends ValueObject<FileProps> {\n  get src(): string {\n    return this.props.src;\n  }\n\n  get name(): string {\n    return this.props.name;\n  }\n\n  private constructor(props: FileProps) {\n    super(props);\n  }\n\n  public static create(src: string, name: string): Result<File> {\n    const guardResult = Guard.againstNullOrUndefined(src, 'source');\n    if (!guardResult.succeeded) {\n      return Result.fail<File>(guardResult.message);\n    } else {\n      return Result.ok<File>(new File({src, name}));\n    }\n  }\n}\n","import {ValueObject} from '../core/domain/ValueObject';\nimport {Result} from '../core/logic/Result';\nimport {Guard} from '../core/logic/Guard';\n\ninterface NameProps {\n  value: string;\n}\n\nexport class Name extends ValueObject<NameProps> {\n  get value(): string {\n    return this.props.value;\n  }\n\n  private constructor(props: NameProps) {\n    super(props);\n  }\n\n  public static create(name: string): Result<Name> {\n    const guardResult = Guard.againstNullOrUndefined(name, 'name');\n    if (!guardResult.succeeded) {\n      return Result.fail<Name>(guardResult.message);\n    } else {\n      return Result.ok<Name>(new Name({value: name}));\n    }\n  }\n}\n","import {ValueObject} from '../core/domain/ValueObject';\nimport {Result} from '../core/logic/Result';\nimport {Guard} from '../core/logic/Guard';\n\ninterface PhoneNumberProps {\n  value: string;\n}\n\nexport class PhoneNumber extends ValueObject<PhoneNumberProps> {\n  get value(): string {\n    return this.props.value;\n  }\n\n  private constructor(props: PhoneNumberProps) {\n    super(props);\n  }\n\n  public static create(number: string): Result<PhoneNumber> {\n    const guardResult = Guard.againstNullOrUndefined(number, 'phone number');\n    if (!guardResult.succeeded) {\n      return Result.fail<PhoneNumber>(guardResult.message);\n    } else {\n      return Result.ok<PhoneNumber>(new PhoneNumber({value: number}));\n    }\n  }\n}\n","import {AccessControlPlus} from 'accesscontrol-plus';\n\nimport {Roles} from '../../modules/users/domain/enums/Roles';\n\nexport interface AccessControlContext {\n  userId?: string;\n  userTenantId?: string;\n  entityOwnerId?: string;\n  entityTenantId?: string;\n}\n\nconst userOwnsEntity = (context: AccessControlContext): boolean =>\n  context.entityOwnerId === context.userId;\n\nconst tenantMatches = (context: AccessControlContext): boolean =>\n  context.entityTenantId === context.userTenantId;\n\nconst accessControl = new AccessControlPlus();\n\naccessControl\n  .deny('public')\n  .resource('*')\n  .action('*')\n  .grant(Roles.CUSTOMER)\n  .resource('invoice')\n  .action('create')\n  .where(userOwnsEntity)\n  .grant(Roles.AUTHOR)\n  .inherits(Roles.CUSTOMER)\n  .grant(Roles.ADMIN)\n  .inherits(Roles.CUSTOMER)\n  .resource('*')\n  .action('*')\n  .where(tenantMatches)\n  .grant(Roles.SUPER_ADMIN)\n  .resource('*')\n  .action('*');\n\nexport {accessControl};\n","import {Result} from '../../../core/logic/Result';\nimport {accessControl, AccessControlContext} from '../AccessControl';\n\nexport type Authorization = 'Authorization';\n\nexport interface AuthorizationContext<T = string> {\n  roles: T[];\n}\n\nexport interface AccessControlledUsecaseContract<R, C, ACC> {\n  getAccessControlContext?(r: R, c: C): Promise<ACC>;\n}\n\nexport abstract class AccessControlledUsecase<R, C, ACC>\n  implements AccessControlledUsecaseContract<R, C, ACC> {}\n\nexport const Authorize = <R, C extends AuthorizationContext>(\n  action: string\n) => (\n  _target: AccessControlledUsecase<R, C, AccessControlContext>, // Class of the decorated method\n  _propertyName: string, // method name\n  propertyDescriptor: PropertyDescriptor\n): PropertyDescriptor => {\n  const method = propertyDescriptor.value;\n\n  propertyDescriptor.value = async function(request: R, context: C) {\n    const {roles} = context;\n    const accessControlContext = await (_target as any).getAccessControlContext(\n      request,\n      context,\n      {} as AccessControlContext\n    );\n\n    // Object.assign({}, accessControlContext, context);\n\n    const permission = await accessControl.can(\n      roles,\n      action,\n      accessControlContext\n    );\n\n    if (!permission.granted) {\n      return Result.fail<Authorization>('UnauthorizedUserException');\n    }\n\n    const result = await method.call(this, request, context, permission);\n\n    return result;\n  };\n\n  return propertyDescriptor;\n};\n","export * from './AccessControl';\nexport * from './decorators/Authorize';\n","// * Core Domain\nimport {Result} from '../../core/logic/Result';\nimport {UniqueEntityID} from '../../core/domain/UniqueEntityID';\n\nimport {Reduction, ReductionProps} from './Reduction';\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Reduction class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class BaseReductionCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract create(\n    props: ReductionProps,\n    id?: UniqueEntityID\n  ): Result<Reduction>;\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating reduction. Usually, it contains some core business logic that\n   * relies on Reduction objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of reduction from it.\n   */\n  // public someOperation(): string {\n  //   // Call the factory method to create a Reduction object.\n  //   const reductionOrError = this.create();\n  //   // Now, use the reduction.\n  //   return `Reduction Creator: The same creator's code has just worked with ${\n  //     reductionOrError.getValue().type\n  //   }`;\n  // }\n}\n","// * Core Domain\nimport {Result} from '../../core/logic/Result';\nimport {UniqueEntityID} from '../../core/domain/UniqueEntityID';\n\nimport {ReductionProps} from './Reduction';\nimport {Discount} from './Discount';\n\nexport class Coupon extends Discount {\n  private constructor(props: ReductionProps, id?: UniqueEntityID) {\n    super(props, id);\n  }\n\n  get name(): string {\n    return this.props.name;\n  }\n\n  get reduction(): number {\n    return this.props.reduction;\n  }\n\n  get created(): Date {\n    return this.props.created;\n  }\n\n  public static create(\n    props: ReductionProps,\n    id?: UniqueEntityID\n  ): Result<Coupon> {\n    return Result.ok<Coupon>(\n      new Coupon(\n        {\n          ...props,\n          type: 'COUPON'\n        },\n        id\n      )\n    );\n  }\n}\n","import {Result} from '../../core/logic/Result';\nimport {UniqueEntityID} from '../../core/domain/UniqueEntityID';\n\nimport {BaseReductionCreator} from './BaseReductionCreator';\nimport {ReductionProps} from './Reduction';\nimport {Coupon} from './Coupon';\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting reduction's type.\n */\nexport class CouponCreator extends BaseReductionCreator {\n  /**\n   * Note that the signature of the method still uses the abstract reduction\n   * type, even though the concrete reduction is actually returned from the\n   * method. This way the Creator can stay independent of concrete reduction\n   * classes.\n   */\n  public create(props: ReductionProps, id?: UniqueEntityID): Result<Coupon> {\n    return Coupon.create(\n      {\n        ...props\n      },\n      id\n    );\n  }\n}\n","// * Core Domain\nimport {Result} from '../../core/logic/Result';\nimport {UniqueEntityID} from '../../core/domain/UniqueEntityID';\n\nimport {Reduction, ReductionProps} from './Reduction';\n\nexport class Discount extends Reduction {\n  public static create(\n    props: ReductionProps,\n    id?: UniqueEntityID\n  ): Result<Discount> {\n    return Result.ok<Discount>(\n      new Discount(\n        {\n          ...props,\n          type: 'DISCOUNT'\n        },\n        id\n      )\n    );\n  }\n}\n","import {Result} from '../../core/logic/Result';\nimport {UniqueEntityID} from '../../core/domain/UniqueEntityID';\n\nimport {BaseReductionCreator} from './BaseReductionCreator';\nimport {ReductionProps} from './Reduction';\nimport {Discount} from './Discount';\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting reduction's type.\n */\nexport class DiscountCreator extends BaseReductionCreator {\n  /**\n   * Note that the signature of the method still uses the abstract reduction\n   * type, even though the concrete reduction is actually returned from the\n   * method. This way the Creator can stay independent of concrete reduction\n   * classes.\n   */\n  public create(props: ReductionProps, id?: UniqueEntityID): Result<Discount> {\n    return Discount.create(\n      {\n        ...props\n      },\n      id\n    );\n  }\n}\n","// * Core Domain\nimport {AggregateRoot} from '../../core/domain/AggregateRoot';\nimport {UniqueEntityID} from '../../core/domain/UniqueEntityID';\nimport {ReductionId} from './ReductionId';\n\nexport interface ReductionProps {\n  reductionId?: ReductionId;\n  name: string;\n  reduction: number;\n  readonly type?: string;\n  isAutomatic?: boolean;\n  isValid?: boolean;\n  created?: Date;\n}\n\nexport abstract class Reduction extends AggregateRoot<ReductionProps> {\n  protected readonly reductionPercentage: number = 0;\n\n  public get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  get reductionId(): ReductionId {\n    return ReductionId.create(this.id);\n  }\n\n  public get type(): string {\n    return this.props.type;\n  }\n\n  public get isAutomatic(): boolean {\n    return this.props.isAutomatic;\n  }\n\n  public get isValid(): boolean {\n    return this.props.isValid;\n  }\n}\n","import {UniqueEntityID} from '../../core/domain/UniqueEntityID';\n\nimport {Reduction, ReductionProps} from './Reduction';\n\nimport {DiscountCreator} from './DiscountCreator';\nimport {WaiverCreator} from './WaiverCreator';\nimport {CouponCreator} from './CouponCreator';\n\nenum ReductionTypes {\n  DISCOUNT,\n  WAIVER,\n  COUPON\n}\n\nexport class ReductionFactory {\n  public static createReduction(\n    type: string,\n    props: ReductionProps,\n    id?: UniqueEntityID\n  ): Reduction {\n    if (type === 'DISCOUNT') {\n      const discountCreator = new DiscountCreator();\n      return discountCreator.create(props, id).getValue();\n    } else if (type === 'WAIVER') {\n      const waiverCreator = new WaiverCreator();\n      return waiverCreator.create(props, id).getValue();\n    } else if (type === 'COUPON') {\n      const couponCreator = new CouponCreator();\n      return couponCreator.create(props, id).getValue();\n    }\n\n    return null;\n  }\n}\n","import {Entity} from '../../core/domain/Entity';\nimport {UniqueEntityID} from '../../core/domain/UniqueEntityID';\n\nexport class ReductionId extends Entity<any> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  private constructor(id?: UniqueEntityID) {\n    super(null, id);\n  }\n\n  public static create(id?: UniqueEntityID): ReductionId {\n    return new ReductionId(id);\n  }\n}\n","// * Core Domain\nimport {Result} from '../../core/logic/Result';\nimport {UniqueEntityID} from '../../core/domain/UniqueEntityID';\n\nimport {ReductionProps} from './Reduction';\nimport {Discount} from './Discount';\n\nexport class Waiver extends Discount {\n  readonly reductionPercentage: number = 1;\n\n  public static create(\n    props: ReductionProps,\n    id?: UniqueEntityID\n  ): Result<Waiver> {\n    return Result.ok<Waiver>(\n      new Waiver(\n        {\n          ...props,\n          type: 'WAIVER'\n        },\n        id\n      )\n    );\n  }\n\n  get percentage(): number {\n    return this.props.reduction || this.reductionPercentage;\n  }\n}\n","import {Result} from '../../core/logic/Result';\nimport {UniqueEntityID} from '../../core/domain/UniqueEntityID';\n\nimport {BaseReductionCreator} from './BaseReductionCreator';\nimport {ReductionProps} from './Reduction';\nimport {Waiver} from './Waiver';\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting reduction's type.\n */\nexport class WaiverCreator extends BaseReductionCreator {\n  /**\n   * Note that the signature of the method still uses the abstract reduction\n   * type, even though the concrete reduction is actually returned from the\n   * method. This way the Creator can stay independent of concrete reduction\n   * classes.\n   */\n  public create(props: ReductionProps, id?: UniqueEntityID): Result<Waiver> {\n    return Waiver.create(\n      {\n        ...props\n      },\n      id\n    );\n  }\n}\n","export class PoliciesRegister {\n  policies = new Map();\n\n  registerPolicy(policy: any) {\n    this.policies.set(policy.getType(), policy);\n  }\n\n  get(name: symbol) {\n    return this.policies.get(name);\n  }\n\n  applyPolicy(policy: symbol, conditions: any[]) {\n    return this.get(policy).getDiscount(...conditions);\n  }\n}\n","import {PolicyContract} from '../contracts/Policy';\nimport {SanctionedCountryRule} from './SanctionedCountryRule';\n\n/**\n * * Corresponding author’s institution is based in a sanctioned country\n * * which is also on the list of waiver countries\n *\n * * IF (waiverCountries[correspondingAuthor.country])\n * * THEN {APC = 0}\n */\nexport class SanctionedCountryPolicy\n  implements PolicyContract<SanctionedCountryRule> {\n  SANCTIONED_COUNTRY = Symbol.for('@SanctionedCountryPolicy');\n\n  /**\n   * @Description\n   *    Calculate the discount based on the corresponding author institution country code\n   * @param invoice\n   */\n  public getDiscount(\n    correspondingAuthorInstitutionCountryCode: string\n  ): SanctionedCountryRule {\n    return new SanctionedCountryRule(correspondingAuthorInstitutionCountryCode);\n  }\n\n  public getType(): symbol {\n    return this.SANCTIONED_COUNTRY;\n  }\n}\n","import {ReductionRuleContract} from '../contracts/ReductionRule';\nimport {ReductionFactory} from '../ReductionFactory';\nimport {Reduction, ReductionProps} from '../Reduction';\n\nconst SANCTIONED_COUNTRIES = {\n  AF: {country: 'Afghanistan'},\n  CU: {country: 'Cuba'},\n  IR: {country: 'Iran'},\n  KP: {country: 'Democratic People’s Republic of Korea'},\n  SS: {country: 'South Sudan'},\n  SD: {country: 'Sudan'},\n  SY: {country: 'Syria'},\n  UA: {country: 'Ukraine'}\n};\n\nexport class SanctionedCountryRule implements ReductionRuleContract<Reduction> {\n  public constructor(\n    public correspondingAuthorInstitutionCountryCode: string\n  ) {}\n\n  public getReduction(): Reduction {\n    if (\n      this.correspondingAuthorInstitutionCountryCode in SANCTIONED_COUNTRIES\n    ) {\n      return ReductionFactory.createReduction('WAIVER', {\n        reduction: -1\n      } as ReductionProps);\n    }\n  }\n}\n","import {PolicyContract} from '../contracts/Policy';\nimport {WaivedCountryRule} from './WaivedCountryRule';\n\n/**\n * * Corresponding author’s institution is based in a sanctioned country\n * * which is also on the list of waiver countries\n *\n * * IF (waiverCountries[correspondingAuthor.country])\n * * THEN {APC = 0}\n */\nexport class WaivedCountryPolicy implements PolicyContract<WaivedCountryRule> {\n  WAIVED_COUNTRY = Symbol.for('@WaivedCountryPolicy');\n\n  /**\n   * @Description\n   *    Calculate the discount based on the corresponding author institution country code\n   * @param invoice\n   */\n  public getDiscount(\n    correspondingAuthorInstitutionCountryCode: string\n  ): WaivedCountryRule {\n    return new WaivedCountryRule(correspondingAuthorInstitutionCountryCode);\n  }\n\n  public getType(): symbol {\n    return this.WAIVED_COUNTRY;\n  }\n}\n","import {ReductionRuleContract} from '../contracts/ReductionRule';\nimport {ReductionFactory} from '../ReductionFactory';\nimport {Reduction, ReductionProps} from '../Reduction';\n\nconst WAIVER_POLICY_COUNTRIES = {\n  AF: {country: 'Afghanistan'},\n  AO: {country: 'Angola'},\n  BJ: {country: 'Benin'},\n  BT: {country: 'Bhutan'},\n  BO: {country: 'Bolivia'},\n  BF: {country: 'Burkina Faso'},\n  BI: {country: 'Burundi'},\n  KH: {country: 'Cambodia'},\n  CM: {country: 'Cameroon'},\n  CV: {country: 'Cape Verde'},\n  CF: {country: 'Central African Republic'},\n  TD: {country: 'Chad'},\n  KM: {country: 'Comoros'},\n  CD: {country: 'Democratic Republic of Congo'},\n  CG: {country: 'Congo'},\n  CI: {country: 'Cote D’Ivoire'},\n  KP: {country: 'Democratic People’s Republic of Korea'},\n  DJ: {country: 'Djibouti'},\n  TL: {country: 'East Timor'},\n  SV: {country: 'El Salvador'},\n  ER: {country: 'Eritrea'},\n  ET: {country: 'Ethiopia'},\n  GM: {country: 'Gambia'},\n  GH: {country: 'Ghana'},\n  GN: {country: 'Guinea'},\n  GW: {country: 'Guinea-Bissau'},\n  HT: {country: 'Haiti'},\n  HN: {country: 'Honduras'},\n  KE: {country: 'Kenya'},\n  KI: {country: 'Kiribati'},\n  KG: {country: 'Kyrgyzstan'},\n  LA: {country: 'Laos'},\n  LS: {country: 'Lesotho'},\n  LR: {country: 'Liberia'},\n  MG: {country: 'Madagascar'},\n  MW: {country: 'Malawi'},\n  ML: {country: 'Mali'},\n  MR: {country: 'Mauritania'},\n  MD: {country: 'Moldova'},\n  MN: {country: 'Mongolia'},\n  MA: {country: 'Morocco'},\n  MZ: {country: 'Mozambique'},\n  MM: {country: 'Myanmar'},\n  NP: {country: 'Nepal'},\n  NI: {country: 'Nicaragua'},\n  NE: {country: 'Niger'},\n  PS: {country: 'Palestinian Authority'},\n  PG: {country: 'Papua New Guinea'},\n  RW: {country: 'Rwanda'},\n  ST: {country: 'Sao Tome and Principe'},\n  SN: {country: 'Senegal'},\n  SL: {country: 'Sierra Leone'},\n  SB: {country: 'Solomon Islands'},\n  SO: {country: 'Somalia'},\n  SS: {country: 'South Sudan'},\n  SD: {country: 'Sudan'},\n  SZ: {country: 'Swaziland'}, //now Eswatini\n  SY: {country: 'Syria'},\n  TJ: {country: 'Tajikistan'},\n  TZ: {country: 'Tanzania'},\n  TG: {country: 'Togo'},\n  TN: {country: 'Tunisia'},\n  UG: {country: 'Uganda'},\n  UA: {country: 'Ukraine'},\n  UZ: {country: 'Uzbekistan'},\n  VU: {country: 'Vanuatu'},\n  VN: {country: 'Vietnam'},\n  YE: {country: 'Yemen'},\n  ZM: {country: 'Zambia'},\n  ZW: {country: 'Zimbabwe'}\n};\n\nexport class WaivedCountryRule implements ReductionRuleContract<Reduction> {\n  public constructor(\n    public correspondingAuthorInstitutionCountryCode: string\n  ) {}\n\n  public getReduction(): Reduction {\n    if (\n      this.correspondingAuthorInstitutionCountryCode in WAIVER_POLICY_COUNTRIES\n    ) {\n      return ReductionFactory.createReduction('WAIVER', {\n        reduction: 0.5\n      } as ReductionProps);\n    }\n  }\n}\n","import {Repo} from './Repo';\n\nexport abstract class AbstractBaseDBRepo<DB, T> implements Repo<T> {\n  constructor(protected db: DB) {}\n\n  abstract async exists(t: T): Promise<boolean>;\n  abstract async save(t: T): Promise<T>;\n}\n","export abstract class Mapper<DomainEntityOrValueObject> {\n  // public static toDomain (raw: any): T;\n  // public static toDTO (t: T): DTO;\n  // public static toPersistence (t: T): any;\n}\n","export enum RepoErrorCode {\n  ENTITY_NOT_FOUND,\n  DB_ERROR,\n}\n\nexport class RepoError extends Error {\n  constructor(public code: RepoErrorCode, message: string) {\n    super(message);\n\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(this, RepoError.prototype);\n    }\n  }\n\n  static createEntityNotFoundError(name: string, id: string): RepoError {\n    return new RepoError(\n      RepoErrorCode.ENTITY_NOT_FOUND,\n      `Entity(${name}) with id[${id}] not found`\n    );\n  }\n\n  static fromDBError(error: Error): RepoError {\n    return new RepoError(\n      RepoErrorCode.DB_ERROR,\n      error.message,\n    );\n  }\n}\n","import * as path from 'path';\nimport Knex from 'knex';\n\nimport {config} from './knexfile';\n\nexport {Knex};\n\ntype DbOptions = {\n  filename: string;\n};\n\nconst defaultDbOptions: DbOptions = {\n  filename: ':memory:'\n};\n\nexport async function makeDb(\n  options: DbOptions = defaultDbOptions\n): Promise<Knex> {\n  const db = Knex({\n    client: 'sqlite3',\n    connection: {\n      filename: options.filename\n    },\n    migrations: {\n      directory: path.join(__dirname, 'migrations')\n    },\n    seeds: {\n      directory: path.join(__dirname, 'seeds')\n    },\n    // pool: {min: 0, max: 10, idleTimeoutMillis: 500},\n    useNullAsDefault: true\n  });\n\n  await db.migrate.latest();\n\n  return db;\n}\n\nexport async function destroyDb(db: Knex): Promise<void> {\n  db.destroy();\n}\n\nexport async function clearTable(db: Knex, ...tables: string[]): Promise<Knex> {\n  await Promise.all(tables.map(async table => await db(table).truncate()));\n\n  return db;\n}\n\nexport const KnexDB = () => Knex(config);\n","require('dotenv').config();\n\nconst {\n  FINANCE_IS_PRODUCTION,\n  FINANCE_DB_USER,\n  FINANCE_DB_PASS,\n  FINANCE_DB_DEVELOPMENT_FILENAME,\n  FINANCE_DB_STAGING_DB_NAME\n} = process.env;\n\nconst NODE_ENV = FINANCE_IS_PRODUCTION === 'false' ? 'development' : 'staging';\n\nconst knexConfiguration = {\n  development: {\n    client: 'sqlite3',\n    connection: {\n      filename: FINANCE_DB_DEVELOPMENT_FILENAME || './dev.sqlite3'\n    },\n    useNullAsDefault: true\n  },\n\n  staging: {\n    client: 'postgresql',\n    connection: {\n      database: FINANCE_DB_STAGING_DB_NAME || 'my_db',\n      user: FINANCE_DB_USER || 'username',\n      password: FINANCE_DB_PASS || 'password'\n    },\n    pool: {\n      min: 2,\n      max: 10\n    },\n    migrations: {\n      tableName: 'knex_migrations'\n    }\n  },\n\n  production: {\n    client: 'postgresql',\n    connection: {\n      database: FINANCE_DB_STAGING_DB_NAME || 'my_db',\n      user: FINANCE_DB_USER || 'username',\n      password: FINANCE_DB_PASS || 'password'\n    },\n    pool: {\n      min: 2,\n      max: 10\n    },\n    migrations: {\n      tableName: 'knex_migrations'\n    }\n  }\n};\n\nconst config = knexConfiguration[NODE_ENV];\n\nexport {config};\n// module.exports = config;\n","import {Entity} from '../../../core/domain/Entity';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\n\nexport class AddressId extends Entity<any> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  private constructor(id?: UniqueEntityID) {\n    super(null, id);\n  }\n\n  public static create(id?: UniqueEntityID): AddressId {\n    return new AddressId(id);\n  }\n}\n","// * Core domain\nimport {AggregateRoot} from '../../../core/domain/AggregateRoot';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Result} from '../../../core/logic/Result';\nimport {ManuscriptId} from './../../invoices/domain/ManuscriptId';\n\ninterface ArticleProps {\n  journalId?: string;\n  title?: string;\n  articleTypeId?: string;\n  created?: Date;\n  authorEmail?: string;\n  authorCountry?: string;\n  authorSurname?: string;\n}\n\nexport class Article extends AggregateRoot<ArticleProps> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  get manuscriptId(): ManuscriptId {\n    return ManuscriptId.create(this._id).getValue();\n  }\n\n  get authorEmail(): string {\n    return this.props.authorEmail;\n  }\n\n  get authorCountry(): string {\n    return this.props.authorCountry;\n  }\n\n  get title(): string {\n    return this.props.title;\n  }\n\n  get articleTypeId(): string {\n    return this.props.articleTypeId;\n  }\n\n  private constructor(props: ArticleProps, id?: UniqueEntityID) {\n    super(props, id);\n  }\n\n  public static create(\n    props: ArticleProps,\n    id?: UniqueEntityID\n  ): Result<Article> {\n    const article = new Article(\n      {\n        ...props,\n        created: props.created ? props.created : new Date()\n      },\n      id\n    );\n\n    return Result.ok<Article>(article);\n  }\n}\n","import {Entity} from '../../../core/domain/Entity';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\n\nexport class ArticleId extends Entity<any> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  private constructor(id?: UniqueEntityID) {\n    super(null, id);\n  }\n\n  public static create(id?: UniqueEntityID): ArticleId {\n    return new ArticleId(id);\n  }\n}\n","import {Entity} from '../../../core/domain/Entity';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Result} from '../../../core/logic/Result';\nimport {Guard} from '../../../core/logic/Guard';\n\nimport {PriceValue} from './PriceValue';\nimport {PriceId} from './PriceId';\n\ninterface PriceProps {\n  value: PriceValue;\n}\n\nexport class Price extends Entity<PriceProps> {\n  public static foo = 'bar';\n\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  get priceId(): PriceId {\n    return PriceId.create(this.id);\n  }\n\n  get value(): PriceValue {\n    return this.props.value;\n  }\n\n  private constructor(props: PriceProps, id?: UniqueEntityID) {\n    super(props, id);\n  }\n\n  public static create(props: PriceProps, id?: UniqueEntityID): Result<Price> {\n    const guardResult = Guard.againstNullOrUndefinedBulk([\n      {argument: props.value, argumentName: 'value'}\n    ]);\n\n    if (!guardResult.succeeded) {\n      return Result.fail<Price>(guardResult.message);\n    } else {\n      return Result.ok<Price>(\n        new Price(\n          {\n            ...props\n          },\n          id\n        )\n      );\n    }\n  }\n}\n","import {Entity} from '../../../core/domain/Entity';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\n\nexport class PriceId extends Entity<any> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  private constructor(id?: UniqueEntityID) {\n    super(null, id);\n  }\n\n  public static create(id?: UniqueEntityID): PriceId {\n    return new PriceId(id);\n  }\n}\n","import {ValueObject} from '../../../core/domain/ValueObject';\nimport {Result} from '../../../core/logic/Result';\n\ninterface PriceValueProps {\n  value: number;\n}\n\nexport class PriceValue extends ValueObject<PriceValueProps> {\n  get value(): number {\n    return this.props.value;\n  }\n\n  private constructor(props: PriceValueProps) {\n    super(props);\n  }\n\n  public static create(value: number): Result<PriceValue> {\n    if (!!value === false || isNaN(value)) {\n      return Result.fail<PriceValue>('Must provide a valid price value.');\n    } else {\n      return Result.ok<PriceValue>(new PriceValue({value}));\n    }\n  }\n}\n","import {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Mapper} from '../../../infrastructure/Mapper';\nimport {Article} from '../domain/Article';\n// import {PriceId} from '../domain/PriceId';\nexport class ArticleMap extends Mapper<Article> {\n  public static toDomain(raw: any): Article {\n    const articleOrError = Article.create(\n      {\n        // journalId: JournalId.create(new UniqueEntityID(raw.journalId)).getValue(),\n        title: raw.title,\n        articleTypeId: raw.articleTypeId,\n        authorEmail: raw.authorEmail,\n        authorCountry: raw.authorCountry,\n        authorSurname: raw.authorSurname\n      },\n      new UniqueEntityID(raw.id)\n    );\n\n    articleOrError.isFailure ? console.log(articleOrError) : '';\n\n    return articleOrError.isSuccess ? articleOrError.getValue() : null;\n  }\n\n  public static toPersistence(article: Article): any {\n    return {\n      id: article.id.toString(),\n      journalId: article.props.journalId.toString(),\n      title: article.props.title,\n      articleTypeId: article.props.articleTypeId,\n      authorEmail: article.props.authorEmail,\n      authorCountry: article.props.authorCountry,\n      authorSurname: article.props.authorSurname\n    };\n  }\n}\n","import {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Mapper} from '../../../infrastructure/Mapper';\nimport {Price} from '../domain/Price';\nimport {PriceValue} from '../domain/PriceValue';\n// import {ArtistMap} from './ArtistMap';\n// import {AlbumMap} from './AlbumMap';\n// import {TraderId} from '../../trading/domain/traderId';\n\nexport class PriceMap extends Mapper<Price> {\n  public static toDomain(raw: any): Price {\n    const priceOrError = Price.create(\n      {\n        value: PriceValue.create(raw.value).getValue()\n        // traderId: TraderId.create(raw.trader_id),\n        // artist: ArtistMap.toDomain(raw.Artist),\n        // album: AlbumMap.toDomain(raw.Album)\n      },\n      new UniqueEntityID(raw.id)\n    );\n\n    priceOrError.isFailure ? console.log(priceOrError) : '';\n\n    return priceOrError.isSuccess ? priceOrError.getValue() : null;\n  }\n\n  public static toPersistence(price: Price): any {\n    return {\n      id: price.id.toString(),\n      value: price.props.value\n      // artist_id: vinyl.artist.artistId.id.toString(),\n      // album_id: vinyl.album.id.toString(),\n      // notes: vinyl.vinylNotes.value\n    };\n  }\n}\n","import {Article, ArticleId, ArticleMap, Knex} from '../../../../..';\nimport {AbstractBaseDBRepo} from '../../../../infrastructure/AbstractBaseDBRepo';\nimport {ArticleRepoContract} from './../articleRepo';\nimport {ManuscriptId} from '../../../invoices/domain/ManuscriptId';\nimport {UniqueEntityID} from 'libs/shared/src/lib/core/domain/UniqueEntityID';\n\nexport class KnexArticleRepo extends AbstractBaseDBRepo<Knex, Article>\n  implements ArticleRepoContract {\n  async findById(manuscriptId: ManuscriptId | string): Promise<Article> {\n    if (typeof manuscriptId === 'string') {\n      manuscriptId = ManuscriptId.create(\n        new UniqueEntityID(manuscriptId)\n      ).getValue();\n    }\n    const articleData = await this.db('articles')\n      .select()\n      .where('id', manuscriptId.id.toString())\n      .first();\n\n    return articleData ? ArticleMap.toDomain(articleData) : null;\n  }\n\n  getAuthorOfArticle(articleId: ArticleId): Promise<unknown> {\n    return Promise.resolve(articleId);\n  }\n\n  exists(article: Article): Promise<boolean> {\n    return Promise.resolve(true);\n  }\n\n  async save(article: Article): Promise<Article> {\n    const {db} = this;\n\n    await db('articles').insert(ArticleMap.toPersistence(article));\n\n    return article;\n  }\n}\n","import {ArticleRepoContract} from './articleRepo';\nimport {KnexArticleRepo} from './implementations/knexArticleRepo';\n\nexport {ArticleRepoContract, KnexArticleRepo};\n","// * Core Domain\nimport {AggregateRoot} from '../../../core/domain/AggregateRoot';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Result} from '../../../core/logic/Result';\n\ninterface AuthorProps {\n  name: string;\n}\n\nexport class Author extends AggregateRoot<AuthorProps> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  get name(): string {\n    return this.props.name;\n  }\n\n  private constructor(props: AuthorProps, id?: UniqueEntityID) {\n    super(props, id);\n  }\n\n  public static create(\n    props: AuthorProps,\n    id?: UniqueEntityID\n  ): Result<Author> {\n    const author = new Author(\n      {\n        ...props\n      },\n      id\n    );\n    return Result.ok<Author>(author);\n  }\n}\n","// * Core Domain\nimport {AggregateRoot} from '../../../core/domain/AggregateRoot';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Result} from '../../../core/logic/Result';\n\nexport interface CatalogItemProps {\n  type: string;\n  price: number;\n}\n\nexport class CatalogItem extends AggregateRoot<CatalogItemProps> {\n  private constructor(props: CatalogItemProps, id?: UniqueEntityID) {\n    super(props, id);\n  }\n\n  public static create(\n    props: CatalogItemProps,\n    id?: UniqueEntityID\n  ): Result<CatalogItem> {\n    const catalogItem = new CatalogItem(\n      {\n        ...props\n      },\n      id\n    );\n    return Result.ok<CatalogItem>(catalogItem);\n  }\n\n  public get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  public get type(): string {\n    return this.props.type;\n  }\n\n  public get price(): number {\n    return this.props.price;\n  }\n}\n","// import {Money, Currencies} from 'ts-money';\n\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Mapper} from '../../../infrastructure/Mapper';\nimport {CatalogItem} from '../domain/CatalogItem';\n// import {CatalogId} from '../domain/CatalogId';\n// import {STATUS as TransactionStatus} from '../domain/Transaction';\n\nexport class CatalogMap extends Mapper<CatalogItem> {\n  public static toDomain(raw: any): CatalogItem {\n    const catalogOrError = CatalogItem.create(\n      {\n        // articleId: ArticleId.create(new UniqueEntityID(raw.articleId)),\n        // price: Money.fromInteger({amount: raw.amount, currency: Currencies.USD})\n        type: raw.type,\n        price: raw.price\n        // dateUpdated: new Date(raw.dateUpdated)\n      },\n      new UniqueEntityID(raw.id)\n    );\n\n    return catalogOrError.isSuccess ? catalogOrError.getValue() : null;\n  }\n\n  public static toPersistence(catalogItem: CatalogItem): any {\n    return {\n      id: catalogItem.id.toString(),\n      type: catalogItem.type,\n      price: catalogItem.price\n      // articleId: catalog.articleId.toString(),\n      // status: catalog.status,\n      // amount: catalog.amount.value,\n      // dateAdded: catalog.dateAdded,\n      // dateUpdated: catalog.dateUpdated\n    };\n  }\n}\n","import {\n  CatalogItem,\n  // CatalogId,\n  CatalogRepoContract,\n  CatalogMap,\n  Knex\n} from '@hindawi/shared';\n\nimport {AbstractBaseDBRepo} from '../../../../infrastructure/AbstractBaseDBRepo';\n\nexport class KnexCatalogRepo extends AbstractBaseDBRepo<Knex, CatalogItem>\n  implements CatalogRepoContract {\n  exists(catalogItem: CatalogItem): Promise<boolean> {\n    return Promise.resolve(true);\n  }\n\n  async save(catalogItem: CatalogItem): Promise<CatalogItem> {\n    const {db} = this;\n\n    await db('catalog').insert(CatalogMap.toPersistence(catalogItem));\n\n    return catalogItem;\n  }\n\n  async getCatalogCollection(): Promise<CatalogItem[]> {\n    const {db} = this;\n\n    const catalogsRows = await db('catalog');\n\n    return catalogsRows.reduce((aggregator: any[], t) => {\n      aggregator.push(CatalogMap.toDomain(t));\n      return aggregator;\n    }, []);\n  }\n\n  async getCatalogItemByType(type = 'APC'): Promise<CatalogItem> {\n    const {db} = this;\n\n    return await db('catalog')\n      .where({type})\n      .first();\n  }\n}\n","import {CatalogRepoContract} from './catalogRepo';\nimport {KnexCatalogRepo} from './implementations/knexCatalogRepo';\n\nexport {CatalogRepoContract, KnexCatalogRepo};\n","import {UseCase} from '../../../../../core/domain/UseCase';\nimport {Result} from '../../../../../core/logic/Result';\n// import {UniqueEntityID} from '../../../../../core/domain/UniqueEntityID';\n\nimport {CatalogItem} from '../../../domain/CatalogItem';\nimport {CatalogRepoContract} from '../../../repos/catalogRepo';\n// import {TextUtil} from '../../../../../utils/TextUtil';\n// import {ParseUtils} from '../../../../../utils/ParseUtils';\n\n// interface PriceRequestDTO {\n//   amount: number;\n//   currency: string;\n// }\n\ninterface AddCatalogItemToCatalogUseCaseRequestDTO {\n  type: string;\n  price: number; // | PriceRequestDTO;\n}\n\nexport class AddCatalogItemToCatalogUseCase\n  implements\n    UseCase<AddCatalogItemToCatalogUseCaseRequestDTO, Result<CatalogItem>> {\n  private catalogRepo: CatalogRepoContract;\n\n  constructor(catalogRepo: CatalogRepoContract) {\n    this.catalogRepo = catalogRepo;\n  }\n\n  // private async getGenresFromDTO(artistGenres: string) {\n  //   return (await this.genresRepo.findByIds(\n  //     (ParseUtils.parseObject(artistGenres) as Result<GenresRequestDTO>)\n  //       .getValue()\n  //       .ids.map(genreId => GenreId.create(new UniqueEntityID(genreId)))\n  //   )).concat(\n  //     (ParseUtils.parseObject(artistGenres) as Result<GenresRequestDTO>)\n  //       .getValue()\n  //       .new.map(name => Genre.create(name).getValue())\n  //   );\n  // }\n\n  // private async getArtist(\n  //   request: AddVinylToCatalogUseCaseRequestDTO\n  // ): Promise<Result<Artist>> {\n  //   const {artistNameOrId, artistGenres} = request;\n  //   const isArtistIdProvided = TextUtil.isUUID(artistNameOrId);\n\n  //   if (isArtistIdProvided) {\n  //     const artist = await this.artistRepo.findByArtistId(artistNameOrId);\n  //     const found = !!artist;\n\n  //     if (found) {\n  //       return Result.ok<Artist>(artist);\n  //     } else {\n  //       return Result.fail<Artist>(\n  //         `Couldn't find artist by id=${artistNameOrId}`\n  //       );\n  //     }\n  //   } else {\n  //     return Artist.create({\n  //       name: ArtistName.create(artistNameOrId).getValue(),\n  //       genres: await this.getGenresFromDTO(artistGenres as string)\n  //     });\n  //   }\n  // }\n\n  // private async getAlbum(\n  //   request: AddVinylToCatalogUseCaseRequestDTO,\n  //   artist: Artist\n  // ): Promise<Result<Album>> {\n  //   const {albumNameOrId, albumGenres, albumYearReleased} = request;\n  //   const isAlbumIdProvided = TextUtil.isUUID(albumNameOrId);\n\n  //   if (isAlbumIdProvided) {\n  //     const album = await this.albumRepo.findAlbumByAlbumId(albumNameOrId);\n  //     const found = !!album;\n\n  //     if (found) {\n  //       return Result.ok<Album>(album);\n  //     } else {\n  //       return Result.fail<Album>(`Couldn't find album by id=${album}`);\n  //     }\n  //   } else {\n  //     return Album.create({\n  //       name: albumNameOrId,\n  //       artistId: artist.artistId,\n  //       genres: await this.getGenresFromDTO(albumGenres as string),\n  //       yearReleased: albumYearReleased\n  //     });\n  //   }\n  // }\n\n  public async execute(\n    request: AddCatalogItemToCatalogUseCaseRequestDTO\n  ): Promise<Result<CatalogItem>> {\n    const {type, price} = request;\n\n    // let artist: Artist;\n    // let album: Album;\n\n    try {\n      // const artistOrError = await this.getArtist(request);\n      // if (artistOrError.isFailure) {\n      //   return Result.fail<Vinyl>(artistOrError.error);\n      // } else {\n      //   artist = artistOrError.getValue();\n      // }\n\n      // const albumOrError = await this.getAlbum(request, artist);\n      // if (albumOrError.isFailure) {\n      //   return Result.fail<Vinyl>(albumOrError.error);\n      // } else {\n      //   album = albumOrError.getValue();\n      // }\n\n      const catalogItemOrError = CatalogItem.create({\n        type,\n        price\n        // artist: artist,\n        // traderId: TraderId.create(new UniqueEntityID(traderId))\n      });\n\n      if (catalogItemOrError.isFailure) {\n        return Result.fail<CatalogItem>(catalogItemOrError.error);\n      }\n\n      const catalogItem = catalogItemOrError.getValue();\n\n      // This is where all the magic happens\n      await this.catalogRepo.save(catalogItem);\n\n      return Result.ok<CatalogItem>(catalogItem);\n    } catch (err) {\n      console.log(err);\n      return Result.fail<CatalogItem>(err);\n    }\n  }\n}\n","import {UseCase} from '../../../../../core/domain/UseCase';\nimport {Result} from '../../../../../core/logic/Result';\n\nimport {CatalogItem} from '../../../domain/CatalogItem';\nimport {CatalogRepoContract} from '../../../repos/catalogRepo';\n\nexport class GetAllCatalogItemsUseCase\n  implements UseCase<{}, Result<CatalogItem[]>> {\n  private catalogRepo: CatalogRepoContract;\n\n  constructor(catalogRepo: CatalogRepoContract) {\n    this.catalogRepo = catalogRepo;\n  }\n\n  private async getCatalogItems(): Promise<Result<CatalogItem[]>> {\n    const catalogItems = await this.catalogRepo.getCatalogCollection();\n\n    if (!catalogItems) {\n      return Result.fail<CatalogItem[]>(`Couldn't list CatalogItem(s).`);\n    }\n\n    return Result.ok<CatalogItem[]>(catalogItems);\n  }\n\n  public async execute(request: {}): Promise<Result<CatalogItem[]>> {\n    try {\n      const catalogItemsOrError = await this.getCatalogItems();\n      if (catalogItemsOrError.isFailure) {\n        return Result.fail<CatalogItem[]>(catalogItemsOrError.error);\n      }\n      const catalogItems = catalogItemsOrError.getValue();\n\n      // magic happens here\n      return Result.ok<CatalogItem[]>(catalogItems);\n    } catch (err) {\n      return Result.fail<CatalogItem[]>(err);\n    }\n  }\n}\n","import {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Mapper} from '../../../infrastructure/Mapper';\nimport {Coupon} from '../../../domain/reductions/Coupon';\n\nexport class CouponPersistenceDTO {\n  id: string;\n  name: string;\n  valid: boolean;\n  reduction: number;\n  created: Date;\n}\n\nexport class CouponMap extends Mapper<Coupon> {\n  public static toDomain(raw: CouponPersistenceDTO): Coupon {\n    const couponOrError = Coupon.create(\n      {\n        // couponId: CouponId.create(new UniqueEntityID(raw.articleId)),\n        // amount: Amount.create(raw.amount).getValue(),\n        name: raw.name,\n        isValid: raw.valid,\n        reduction: raw.reduction,\n        created: new Date(raw.created)\n      },\n      new UniqueEntityID(raw.id)\n    );\n\n    return couponOrError.isSuccess ? couponOrError.getValue() : null;\n  }\n\n  public static toPersistence(coupon: Coupon): CouponPersistenceDTO {\n    return {\n      id: coupon.id.toString(),\n      // articleId: transaction.articleId.toString(),\n      name: coupon.name,\n      valid: coupon.isValid,\n      reduction: coupon.reduction,\n      created: coupon.created\n    };\n  }\n}\n","import {Knex} from '@hindawi/shared';\n\nimport {Coupon} from '../../../../domain/reductions/Coupon';\nimport {CouponMap} from '../../mappers/CouponMap';\nimport {ReductionId} from '../../../../domain/reductions/ReductionId';\n\nimport {AbstractBaseDBRepo} from '../../../../infrastructure/AbstractBaseDBRepo';\nimport {RepoError} from '../../../../infrastructure/RepoError';\nimport {CouponRepoContract} from '../couponRepo';\n\nexport class KnexCouponRepo extends AbstractBaseDBRepo<Knex, Coupon>\n  implements CouponRepoContract {\n  async getCouponById(couponId: ReductionId): Promise<Coupon> {\n    const {db} = this;\n\n    const couponRow = await db('coupons')\n      .select()\n      .where('id', couponId.id.toString())\n      .first();\n\n    return couponRow ? CouponMap.toDomain(couponRow) : null;\n  }\n\n  // getTransactionByManuscriptId(articleId: string): Promise<Transaction> {\n  //   // TODO: Please read `docs/typescript/COMMANDMENTS.ts` to understand why `{} as Transaction` is a lie.\n  //   return Promise.resolve({} as Transaction);\n  // }\n\n  async getCouponCollection(): Promise<Coupon[]> {\n    const {db} = this;\n\n    const couponsRows = await db('coupons');\n\n    return couponsRows.reduce((aggregator: any[], t) => {\n      aggregator.push(CouponMap.toDomain(t));\n      return aggregator;\n    }, []);\n  }\n\n  // async delete(transaction: Transaction): Promise<unknown> {\n  //   const {db} = this;\n\n  //   const deletedRows = await db('transactions')\n  //     .where('id', transaction.id.toString())\n  //     .delete();\n\n  //   return deletedRows\n  //     ? deletedRows\n  //     : Promise.reject(\n  //         RepoError.createEntityNotFoundError(\n  //           'transaction',\n  //           transaction.id.toString()\n  //         )\n  //       );\n  // }\n\n  // async update(transaction: Transaction): Promise<Transaction> {\n  //   const {db} = this;\n\n  //   const updated = await db('transactions')\n  //     .where({id: transaction.id.toString()})\n  //     .update(TransactionMap.toPersistence(transaction));\n\n  //   if (!updated) {\n  //     throw RepoError.createEntityNotFoundError(\n  //       'transaction',\n  //       transaction.id.toString()\n  //     );\n  //   }\n\n  //   return transaction;\n  // }\n\n  async exists(coupon: Coupon): Promise<boolean> {\n    const result = await this.getCouponById(coupon.reductionId);\n\n    return !!result;\n  }\n\n  async save(coupon: Coupon): Promise<Coupon> {\n    const {db} = this;\n\n    const data = CouponMap.toPersistence(coupon);\n\n    await db('coupons').insert(data);\n\n    return this.getCouponById(coupon.reductionId);\n  }\n}\n","import {CouponRepoContract} from './couponRepo';\nimport {KnexCouponRepo} from './implementations/knexCouponRepo';\n\nexport {CouponRepoContract, KnexCouponRepo};\n","// * Core Domain\nimport {AggregateRoot} from '../../../core/domain/AggregateRoot';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Result} from '../../../core/logic/Result';\n\n// * Subdomains\nimport {InvoiceId} from './InvoiceId';\nimport {InvoiceItem} from './InvoiceItem';\nimport {InvoiceItems} from './InvoiceItems';\nimport {InvoiceSentEvent} from './events/invoiceSentEvent';\nimport {InvoicePaidEvent} from './events/invoicePaidEvent';\nimport {TransactionId} from '../../transactions/domain/TransactionId';\nimport {PayerId} from '../../payers/domain/PayerId';\n// import {PayerType} from '../../payers/domain/PayerType';\n// import {Coupon} from '../../coupons/domain/Coupon';\n\nexport enum InvoiceStatus {\n  DRAFT, // after the internal object has been created\n  ACTIVE, // when the customer is being notified\n  FINAL // after a resolution has been set: either it was paid, it was waived, or it has been considered bad debt\n}\n\ninterface InvoiceProps {\n  status: InvoiceStatus;\n  invoiceNumber?: string; // TODO: AutoIncrement?...Smells bad!\n  transactionId: TransactionId;\n  payerId?: PayerId;\n  invoiceItems?: InvoiceItems;\n  dateCreated?: Date;\n  dateUpdated?: Date;\n  totalNumInvoiceItems?: number;\n}\n\nexport type InvoiceCollection = Invoice[];\n\nexport class Invoice extends AggregateRoot<InvoiceProps> {\n  get invoiceId(): InvoiceId {\n    return InvoiceId.create(this._id).getValue();\n  }\n\n  get transactionId(): TransactionId {\n    return this.props.transactionId;\n  }\n\n  get payerId(): PayerId {\n    return this.props.payerId;\n  }\n\n  get status(): InvoiceStatus {\n    return this.props.status;\n  }\n\n  get dateCreated(): Date {\n    return this.props.dateCreated;\n  }\n\n  get invoiceItems(): InvoiceItems {\n    return this.props.invoiceItems;\n  }\n\n  set payerId(payerId: PayerId) {\n    this.props.payerId = payerId;\n  }\n\n  get invoiceNumber(): string {\n    return this.props.invoiceNumber;\n  }\n\n  set transactionId(transactionId: TransactionId) {\n    this.props.transactionId = transactionId;\n  }\n\n  private removeInvoiceItemIfExists(invoiceItem: InvoiceItem): void {\n    if (this.props.invoiceItems.exists(invoiceItem)) {\n      this.props.invoiceItems.remove(invoiceItem);\n    }\n  }\n\n  public addInvoiceItem(invoiceItem: InvoiceItem): Result<void> {\n    this.removeInvoiceItemIfExists(invoiceItem);\n    this.props.invoiceItems.add(invoiceItem);\n    this.props.totalNumInvoiceItems++;\n    // this.addDomainEvent(new InvoiceItemIssued(this, invoiceItem));\n    return Result.ok<void>();\n  }\n\n  private constructor(props: InvoiceProps, id?: UniqueEntityID) {\n    super(props, id);\n  }\n\n  public static create(\n    props: InvoiceProps,\n    id?: UniqueEntityID\n  ): Result<Invoice> {\n    const defaultValues = {\n      ...props,\n      invoiceItems: props.invoiceItems\n        ? props.invoiceItems\n        : InvoiceItems.create([]),\n      dateCreated: props.dateCreated ? props.dateCreated : new Date()\n    };\n\n    const isNewInvoice = !!id === false;\n    const invoice = new Invoice(defaultValues, id);\n\n    if (isNewInvoice) {\n      // invoice.addDomainEvent(new InvoiceCreated(invoice));\n      // Create with initial invoice item from whomever created the invoice\n      // invoice.addInvoiceItem(\n      //   InvoiceItem.create(props.invoiceId, invoice.manuscriptId).getValue()\n      // );\n    }\n\n    return Result.ok<Invoice>(invoice);\n  }\n\n  public send(): void {\n    this.addDomainEvent(new InvoiceSentEvent(this.invoiceId, new Date()));\n  }\n\n  public markAsActive(): void {\n    const now = new Date();\n    this.props.dateUpdated = now;\n    this.props.status = InvoiceStatus.ACTIVE;\n    // this.addDomainEvent(new InvoicePaidEvent(this.invoiceId, now));\n  }\n\n  public markAsPaid(): void {\n    const now = new Date();\n    this.props.dateUpdated = now;\n    this.props.status = InvoiceStatus.FINAL;\n    this.addDomainEvent(new InvoicePaidEvent(this.invoiceId, now));\n  }\n\n  // public getValue(): number {\n  //   return this.invoiceItems.reduce(\n  //     (value: number, invoiceItem: InvoiceItem) => {\n  //       value += invoiceItem.price;\n  //       return value;\n  //     },\n  //     0\n  //   );\n  // }\n\n  // public addInvoiceItem(invoiceItem: InvoiceItem): void {\n  //   const alreadyAdded = this.props.invoiceItems.find(i =>\n  //     i.id.equals(invoiceItem.id)\n  //   );\n\n  //   if (!alreadyAdded) {\n  //     Object.assign(invoiceItem, {invoiceId: this.invoiceId});\n  //     this.props.invoiceItems.push(invoiceItem);\n  //   }\n  // }\n\n  // public removeInvoiceItems(invoiceItem: InvoiceItem): void {\n  //   this.props.invoiceItems = this.props.invoiceItems.filter(\n  //     i => !i.id.equals(invoiceItem.id)\n  //   );\n  // }\n\n  // public clearInvoiceItems(): void {\n  //   this.props.invoiceItems = [];\n  // }\n\n  // public addTax(taxRate: number) {\n  //   const netAmount = this.getValue();\n  //   const taxValue = (netAmount * taxRate) / 100;\n  //   return netAmount + taxValue;\n  // }\n\n  // public redeemCoupon(reduction: number) {\n  //   const netAmount = this.getValue();\n  //   const reductionValue = netAmount * reduction;\n  //   return netAmount - reductionValue;\n  // }\n}\n","import {Result} from './../../../core/logic/Result';\nimport {Entity} from '../../../core/domain/Entity';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\n\nexport class InvoiceId extends Entity<any> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  private constructor(id?: UniqueEntityID) {\n    super(null, id);\n  }\n\n  public static create(id?: UniqueEntityID): Result<InvoiceId> {\n    return Result.ok<InvoiceId>(new InvoiceId(id));\n  }\n}\n","// * Core Domain\nimport {AggregateRoot} from '../../../core/domain/AggregateRoot';\nimport {Guard, GuardArgument} from './../../../core/logic/Guard';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Result} from '../../../core/logic/Result';\n\nimport {InvoiceId} from './InvoiceId';\nimport {InvoiceItemId} from './InvoiceItemId';\nimport {ManuscriptId} from './ManuscriptId';\n\nexport type InvoiceItemType = 'APC' | 'PRINT ORDER';\n\nexport interface InvoiceItemProps {\n  invoiceId: InvoiceId;\n  manuscriptId: ManuscriptId;\n  type?: InvoiceItemType;\n  name?: string;\n  price?: number;\n  dateCreated: Date;\n}\n\nexport class InvoiceItem extends AggregateRoot<InvoiceItemProps> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  get invoiceItemId(): InvoiceItemId {\n    return InvoiceItemId.create(this.id);\n  }\n\n  get invoiceId(): InvoiceId {\n    return this.props.invoiceId;\n  }\n\n  get manuscriptId(): ManuscriptId {\n    return this.props.manuscriptId;\n  }\n\n  get type(): InvoiceItemType {\n    return this.props.type;\n  }\n\n  get name(): string {\n    return this.props.name;\n  }\n\n  get price(): number {\n    return this.props.price;\n  }\n\n  get dateCreated(): Date {\n    return this.props.dateCreated;\n  }\n\n  private constructor(props: InvoiceItemProps, id?: UniqueEntityID) {\n    super(props, id);\n  }\n\n  set price(priceValue: number) {\n    this.props.price = priceValue;\n  }\n\n  public static create(\n    props: InvoiceItemProps,\n    id?: UniqueEntityID\n  ): Result<InvoiceItem> {\n    const guardArgs: GuardArgument[] = [\n      {argument: props.invoiceId, argumentName: 'invoiceId'},\n      {argument: props.manuscriptId, argumentName: 'manuscriptId'}\n    ];\n\n    const guardResult = Guard.againstNullOrUndefinedBulk(guardArgs);\n\n    if (!guardResult.succeeded) {\n      return Result.fail<InvoiceItem>(guardResult.message);\n    }\n\n    const defaultValues: InvoiceItemProps = {\n      ...props,\n      name: props.name ? props.name : 'APC',\n      type: props.type ? props.type : 'APC',\n      dateCreated: props.dateCreated ? props.dateCreated : new Date()\n    };\n\n    const invoiceItem = new InvoiceItem(defaultValues, id);\n    return Result.ok<InvoiceItem>(invoiceItem);\n  }\n}\n","import {Entity} from '../../../core/domain/Entity';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\n\nexport class InvoiceItemId extends Entity<any> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  private constructor(id?: UniqueEntityID) {\n    super(null, id);\n  }\n\n  public static create(id?: UniqueEntityID): InvoiceItemId {\n    return new InvoiceItemId(id);\n  }\n}\n","import {WatchedList} from '../../../core/domain/WatchedList';\nimport {InvoiceItem} from './InvoiceItem';\n\nexport class InvoiceItems extends WatchedList<InvoiceItem> {\n  private constructor(initialVotes: InvoiceItem[]) {\n    super(initialVotes);\n  }\n\n  public compareItems(a: InvoiceItem, b: InvoiceItem): boolean {\n    return a.equals(b);\n  }\n\n  public static create(invoiceItems?: InvoiceItem[]): InvoiceItems {\n    return new InvoiceItems(invoiceItems ? invoiceItems : []);\n  }\n}\n","import {Result} from './../../../core/logic/Result';\nimport {Entity} from '../../../core/domain/Entity';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\n\nexport class ManuscriptId extends Entity<any> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  private constructor(id?: UniqueEntityID) {\n    super(null, id);\n  }\n\n  public static create(id?: UniqueEntityID): Result<ManuscriptId> {\n    return Result.ok<ManuscriptId>(new ManuscriptId(id));\n  }\n}\n","import {DomainEventContract} from '../../../../core/domain/events/contracts/DomainEvent';\nimport {UniqueEntityID} from '../../../../core/domain/UniqueEntityID';\n\nimport {InvoiceId} from '../InvoiceId';\n\nexport class InvoicePaidEvent implements DomainEventContract {\n  public invoiceId: InvoiceId;\n  public dateTimeOccurred: Date;\n\n  constructor(invoiceId: InvoiceId, dateTimeOccurred: Date) {\n    this.invoiceId = invoiceId;\n    this.dateTimeOccurred = dateTimeOccurred;\n  }\n\n  public getAggregateId(): UniqueEntityID {\n    return this.invoiceId.id;\n  }\n}\n","import {DomainEventContract} from '../../../../core/domain/events/contracts/DomainEvent';\nimport {UniqueEntityID} from '../../../../core/domain/UniqueEntityID';\n\nimport {InvoiceId} from '../InvoiceId';\n\nexport class InvoiceSentEvent implements DomainEventContract {\n  public invoiceId: InvoiceId;\n  public dateTimeOccurred: Date;\n\n  constructor(invoiceId: InvoiceId, dateTimeOccurred: Date) {\n    this.invoiceId = invoiceId;\n    this.dateTimeOccurred = dateTimeOccurred;\n  }\n\n  public getAggregateId(): UniqueEntityID {\n    return this.invoiceId.id;\n  }\n}\n","export class PoliciesRegister {\n  policies = new Map();\n\n  registerPolicy(policy: any) {\n    this.policies.set(policy.getType(), policy);\n  }\n\n  get(name: symbol) {\n    return this.policies.get(name);\n  }\n\n  applyPolicy(policy: symbol, conditions: any[]) {\n    return this.get(policy).getVAT(...conditions);\n  }\n}\n","import {PolicyContract} from '../contracts/PolicyContract';\nimport {UKVATTreatmentOfHardCopyPublicationsRule} from './UKVATHardCopyRule';\n\n/**\n * * All sales of hard copy journals will be made from the UK (Place Of Supply is UK)\n * * All such supplies of publications by Hindawi will be subject to the 0% VAT rate\n * * In the case of supplies of hard copy journals to VAT registered customers in other EU member states,\n * * Hindawi should obtain the EU customers VAT registration number\n * * Hindawi should be aware of the distance selling rules for non-business customers\n * * What is the distance selling threshold?\n *\n * * Determine is customer is from UK|NON-UE\n * * Determine if customer is VAT|Non-VAT registered\n */\nexport class UKVATTreatmentOfHardCopyPublicationsPolicy\n  implements PolicyContract<UKVATTreatmentOfHardCopyPublicationsRule> {\n  UK_VAT_TREATMENT_HARD_COPY_PUBLICATIONS = Symbol.for(\n    '@UKVATreatmentOfHardCopyPublicationsPolicy'\n  );\n\n  /**\n   * @Description\n   *    Calculate the VAT based on the net value, country code\n   *    and indication if the customer is a company or not.\n   * @param invoice\n   */\n  public getVAT(\n    countryCode: string,\n    asBusiness = false\n  ): UKVATTreatmentOfHardCopyPublicationsRule {\n    return new UKVATTreatmentOfHardCopyPublicationsRule(\n      countryCode,\n      asBusiness\n    );\n  }\n\n  public getType(): symbol {\n    return this.UK_VAT_TREATMENT_HARD_COPY_PUBLICATIONS;\n  }\n}\n","import {TaxRuleContract} from '../contracts/TaxRuleContract';\n\nexport class UKVATTreatmentOfHardCopyPublicationsRule\n  implements TaxRuleContract {\n  public IsBusiness: boolean;\n  public CountryCode: string;\n\n  public constructor(countryCode: string, asBusiness = false) {\n    this.IsBusiness = asBusiness;\n    this.CountryCode = countryCode;\n  }\n\n  public getVAT(): number {\n    return 0;\n  }\n}\n","import {PolicyContract} from '../contracts/PolicyContract';\nimport {UKVATTreatmentArticleProcessingChargesRule} from './UKVATTreatmentArticleProcessingChargesRule';\n\nexport class UKVATTreatmentArticleProcessingChargesPolicy\n  implements PolicyContract<UKVATTreatmentArticleProcessingChargesRule> {\n  UK_VAT_TREATMENT_ARTICLE_PROCESSING_CHARGES = Symbol.for(\n    '@UKVATTreatmentOfArticleProcessingChargesPolicy'\n  );\n\n  /**\n   * @Description\n   *    Calculate the VAT based on the net value, country code\n   *    and indication if the customer is a company or not.\n   * @param invoice\n   */\n  public getVAT(\n    countryCode: string,\n    asBusiness = false,\n    VATRegistered = true\n  ): UKVATTreatmentArticleProcessingChargesRule {\n    return new UKVATTreatmentArticleProcessingChargesRule(\n      countryCode,\n      asBusiness,\n      VATRegistered\n    );\n  }\n\n  public getType(): symbol {\n    return this.UK_VAT_TREATMENT_ARTICLE_PROCESSING_CHARGES;\n  }\n}\n","import {TaxRuleContract} from '../contracts/TaxRuleContract';\n\n/**\n * * Customer Categories:\n * * - Private individual (not VAT registered)\n * * - VAT-registered educational institution\n * * - VAT-registered charitable organisation (grant funding)\n * * - VAT-registered organisation with both charitable and business functions (many schools, some governments)\n * * - VAT-registered commercial organisation (i.e. pharmaceutical companies)\n *\n * * The place of supply is where the customer is established.\n * * - For UK business/non-business customers – UK VAT should be charged at the current standard rate of 20%.\n * * - For EU business customers – The supply will be outside the scope of UK VAT.\n * * - For EU non-business customers – UK VAT should be charged at the current standard rate of 20%.\n * * - For non-EU business customers – The supply will be outside the scope of UK VAT.\n * * - For non-EU non-business customers – The supply will be outside the scope of UK VAT.\n *\n * * Determining the location/place of establishment of the customer:\n * * - Billing address of the customer\n * *    - If VAT registered: VAT registration number\n * *    - If not VAT registered: Company number\n * * - Location of the bank\n *\n * * Determining the business status of the customer\n *\n */\nexport class UKVATTreatmentArticleProcessingChargesRule\n  implements TaxRuleContract {\n  public AsBusiness: boolean;\n  public VATRegistered: boolean;\n  public CountryCode: string;\n\n  /**\n   * * All available tax rules and their exceptions.\n   * Taken from: http://ec.europa.eu/taxation_customs/resources/documents/taxation/vat/how_vat_works/rates/vat_rates_en.pdf\n   */\n  private VATRules = {\n    // Belgium\n    BE: {rate: 21},\n    // Bulgaria\n    BG: {rate: 20},\n    // Czech Republic\n    CZ: {rate: 21},\n    // Denmark\n    DK: {rate: 25},\n    // Germany\n    DE: {rate: 19},\n    // Estonia\n    EE: {rate: 20},\n    // Ireland\n    IE: {rate: 23},\n    // Greece\n    EL: {rate: 24},\n    // Spain\n    ES: {rate: 21},\n    // France\n    FR: {rate: 20},\n    // Croatia\n    HR: {rate: 25},\n    // Italy\n    IT: {rate: 22},\n    // Cyprus\n    CY: {rate: 19},\n    // Latvia\n    LV: {rate: 21},\n    // Lithuania\n    LT: {rate: 21},\n    // Luxembourg\n    LU: {rate: 14},\n    // Hungary\n    HU: {rate: 27},\n    // Malta\n    MT: {rate: 18},\n    // Netherlands\n    NL: {rate: 21},\n    // Austria\n    AT: {rate: 20},\n    // Poland\n    PL: {rate: 23},\n    // Portugal\n    PT: {rate: 23},\n    // Romania\n    RO: {rate: 19},\n    // Slovenia\n    SI: {rate: 22},\n    // Slovakia\n    SK: {rate: 20},\n    // Finland\n    FI: {rate: 24},\n    // Sweden\n    SE: {rate: 25},\n    // United Kingdom\n    UK: {rate: 20}\n  };\n\n  public constructor(\n    countryCode: string,\n    asBusiness = false,\n    VATRegistered = true\n  ) {\n    this.CountryCode = countryCode;\n    this.AsBusiness = asBusiness;\n    this.VATRegistered = VATRegistered;\n  }\n\n  public getVAT(): number {\n    const europeanCountriesCodes = Object.keys(this.VATRules);\n    let VATRate = 0;\n\n    if (europeanCountriesCodes.includes(this.CountryCode)) {\n      VATRate = this.VATRules[this.CountryCode].rate;\n\n      if (!this.AsBusiness && !this.VATRegistered) {\n        VATRate = this.VATRules.UK.rate;\n      }\n    }\n\n    return VATRate;\n  }\n}\n","import {PolicyContract} from '../contracts/PolicyContract';\nimport {UKVATTreatmentArticleProcessingChargesRule} from './UKVATTreatmentArticleProcessingChargesRule';\n\n/**\n * * 1. Determine if customer is institution\n * * 2. Determine if institution is from UK|EU|Non-EU\n * * 3. Determine if institution IS/IS NOT in business\n */\nexport class VATTreatmentPublicationNotOwnedPolicy\n  implements PolicyContract<UKVATTreatmentArticleProcessingChargesRule> {\n  VAT_TREATMENT_PUBLICATION_NOT_OWNED = Symbol.for(\n    '@VATTreatmentPublicationNotOwnedPolicy'\n  );\n\n  /**\n   * @Description\n   *    Calculate the VAT based on the net value, country code\n   *    and indication if the customer is a company or not.\n   * @param invoice\n   */\n  public getVAT(\n    countryCode: string,\n    asBusiness = false,\n    VATRegistered = true\n  ): UKVATTreatmentArticleProcessingChargesRule {\n    return new UKVATTreatmentArticleProcessingChargesRule(\n      countryCode,\n      asBusiness,\n      VATRegistered\n    );\n  }\n\n  public getType(): symbol {\n    return this.VAT_TREATMENT_PUBLICATION_NOT_OWNED;\n  }\n}\n","import {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Mapper} from '../../../infrastructure/Mapper';\nimport {InvoiceItem, InvoiceItemType} from '../domain/InvoiceItem';\nimport {InvoiceId} from '../domain/InvoiceId';\nimport {ManuscriptId} from 'libs/shared/src/lib/modules/invoices/domain/ManuscriptId';\n\nexport interface InvoiceItemPersistenceDTO {\n  id?: string;\n  invoiceId: string;\n  manuscriptId: string;\n  type?: InvoiceItemType;\n  name?: string;\n  price?: number;\n  dateCreated?: Date;\n}\n\nexport class InvoiceItemMap extends Mapper<InvoiceItem> {\n  public static toDomain(raw: InvoiceItemPersistenceDTO): InvoiceItem {\n    const invoiceItemOrError = InvoiceItem.create(\n      {\n        invoiceId: InvoiceId.create(\n          new UniqueEntityID(raw.invoiceId)\n        ).getValue(),\n        manuscriptId: ManuscriptId.create(\n          new UniqueEntityID(raw.manuscriptId)\n        ).getValue(),\n        type: raw.type,\n        name: raw.name,\n        price: raw.price,\n        dateCreated: new Date(raw.dateCreated)\n      },\n      new UniqueEntityID(raw.id)\n    );\n\n    if (invoiceItemOrError.isFailure) {\n      return null;\n    }\n\n    return invoiceItemOrError.getValue();\n  }\n\n  public static toPersistence(\n    invoiceItem: InvoiceItem\n  ): InvoiceItemPersistenceDTO {\n    return {\n      id: invoiceItem.id.toString(),\n      invoiceId: invoiceItem.invoiceId.id.toString(),\n      manuscriptId: invoiceItem.manuscriptId.id.toString(),\n      type: invoiceItem.type,\n      name: invoiceItem.name,\n      price: invoiceItem.price,\n      dateCreated: invoiceItem.dateCreated\n    };\n  }\n}\n","import {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Mapper} from '../../../infrastructure/Mapper';\n\nimport {Invoice} from '../domain/Invoice';\nimport {TransactionId} from '../../transactions/domain/TransactionId';\n\nexport class InvoiceMap extends Mapper<Invoice> {\n  public static toDomain(raw: any): Invoice {\n    const invoiceOrError = Invoice.create(\n      {\n        transactionId: TransactionId.create(\n          new UniqueEntityID(raw.transactionId)\n        ),\n        status: raw.status,\n        dateCreated: new Date(raw.dateCreated)\n      },\n      new UniqueEntityID(raw.id)\n    );\n\n    invoiceOrError.isFailure ? console.log(invoiceOrError) : '';\n\n    return invoiceOrError.isSuccess ? invoiceOrError.getValue() : null;\n  }\n\n  public static toPersistence(invoice: Invoice): any {\n    return {\n      id: invoice.id.toString(),\n      transactionId: invoice.transactionId.id.toString(),\n      status: invoice.status,\n      dateCreated: invoice.dateCreated\n    };\n  }\n}\n","import {Knex} from '@hindawi/shared';\n\nimport {UniqueEntityID} from '../../../../core/domain/UniqueEntityID';\n\nimport {Invoice} from '../../domain/Invoice';\nimport {InvoiceId} from '../../domain/InvoiceId';\nimport {InvoiceItemId} from '../../domain/InvoiceItemId';\nimport {InvoiceMap} from '../../mappers/InvoiceMap';\nimport {TransactionId} from './../../../transactions/domain/TransactionId';\n\nimport {AbstractBaseDBRepo} from '../../../../infrastructure/AbstractBaseDBRepo';\nimport {RepoError, RepoErrorCode} from '../../../../infrastructure/RepoError';\nimport {InvoiceRepoContract} from '../invoiceRepo';\n\nexport class KnexInvoiceRepo extends AbstractBaseDBRepo<Knex, Invoice>\n  implements InvoiceRepoContract {\n  public async getInvoiceById(invoiceId: InvoiceId): Promise<Invoice> {\n    const {db} = this;\n\n    const invoice = await db('invoices')\n      .select()\n      .where('id', invoiceId.id.toString())\n      .first();\n\n    if (!invoice) {\n      throw RepoError.createEntityNotFoundError(\n        'invoice',\n        invoiceId.id.toString()\n      );\n    }\n\n    return InvoiceMap.toDomain(invoice);\n  }\n\n  public async getInvoiceByInvoiceItemId(\n    invoiceItemId: InvoiceItemId\n  ): Promise<Invoice> {\n    const {db} = this;\n\n    const invoice = await db('invoice_items')\n      .select()\n      .where('id', invoiceItemId.id.toString())\n      .first();\n\n    if (!invoice) {\n      throw RepoError.createEntityNotFoundError(\n        'invoiceItem',\n        invoiceItemId.id.toString()\n      );\n    }\n\n    return InvoiceMap.toDomain(invoice);\n  }\n\n  async getInvoicesByTransactionId(\n    transactionId: TransactionId\n  ): Promise<Invoice[]> {\n    const {db} = this;\n    const invoices = await db('invoices')\n      .select()\n      .where('transactionId', transactionId.id.toString());\n\n    return invoices.map(i => InvoiceMap.toDomain(i));\n  }\n\n  async delete(invoice: Invoice): Promise<unknown> {\n    const {db} = this;\n\n    const deletedRows = await db('invoices')\n      .where('id', invoice.id.toString())\n      .update({...InvoiceMap.toPersistence(invoice), deleted: 1});\n\n    if (!deletedRows) {\n      throw RepoError.createEntityNotFoundError(\n        'invoice',\n        invoice.id.toString()\n      );\n    }\n\n    return deletedRows;\n  }\n\n  async update(invoice: Invoice): Promise<Invoice> {\n    const {db} = this;\n\n    const updated = await db('invoices')\n      .where({id: invoice.invoiceId.id.toString()})\n      .update({\n        status: invoice.status,\n        dateCreated: invoice.dateCreated,\n        transactionId: invoice.transactionId.id.toString()\n      });\n\n    if (!updated) {\n      throw RepoError.createEntityNotFoundError(\n        'invoice',\n        invoice.id.toString()\n      );\n    }\n\n    return invoice;\n  }\n\n  async exists(invoice: Invoice): Promise<boolean> {\n    try {\n      await this.getInvoiceById(invoice.invoiceId);\n    } catch (e) {\n      if (e.code === RepoErrorCode.ENTITY_NOT_FOUND) {\n        return false;\n      }\n\n      throw e;\n    }\n\n    return true;\n  }\n\n  async save(invoice: Invoice): Promise<Invoice> {\n    const {db} = this;\n\n    const rawInvoice = InvoiceMap.toPersistence(invoice);\n\n    try {\n      await db('invoices').insert(rawInvoice);\n    } catch (e) {\n      throw RepoError.fromDBError(e);\n    }\n\n    return this.getInvoiceById(invoice.invoiceId);\n  }\n}\n","import {KnexInvoiceRepo} from './implementations/knexInvoiceRepo';\nimport {InvoiceRepoContract} from './invoiceRepo';\n\nexport {InvoiceRepoContract, KnexInvoiceRepo};\n","// * Core Domain\nimport {UseCase} from '../../../../core/domain/UseCase';\nimport {Result} from '../../../../core/logic/Result';\nimport {UniqueEntityID} from '../../../../core/domain/UniqueEntityID';\n\nimport {Invoice, InvoiceStatus} from '../../domain/Invoice';\nimport {InvoiceRepoContract} from '../../repos/invoiceRepo';\nimport {TransactionRepoContract} from '../../../transactions/repos/transactionRepo';\nimport {Transaction} from '../../../transactions/domain/Transaction';\nimport {TransactionId} from '../../../transactions/domain/TransactionId';\nimport {\n  Authorize,\n  AuthorizationContext\n} from '../../../../domain/authorization/decorators/Authorize';\nimport {AccessControlContext} from '../../../../domain/authorization/AccessControl';\nimport {Roles} from '../../../users/domain/enums/Roles';\n\nexport interface CreateInvoiceRequestDTO {\n  transactionId?: string;\n}\n\nexport type CreateInvoiceContext = AuthorizationContext<Roles>;\n\nexport class CreateInvoiceUsecase\n  implements\n    UseCase<CreateInvoiceRequestDTO, Result<Invoice>, CreateInvoiceContext> {\n  constructor(\n    private invoiceRepo: InvoiceRepoContract,\n    private transactionRepo: TransactionRepoContract\n  ) {\n    this.invoiceRepo = invoiceRepo;\n    this.transactionRepo = transactionRepo;\n  }\n\n  private async getTransaction(\n    request: CreateInvoiceRequestDTO\n  ): Promise<Result<Transaction>> {\n    const {transactionId} = request;\n    if (!transactionId) {\n      return Result.fail<Transaction>(\n        `Invalid transaction id=${transactionId}`\n      );\n    }\n\n    const transaction = await this.transactionRepo.getTransactionById(\n      TransactionId.create(new UniqueEntityID(transactionId))\n    );\n    const found = !!transaction;\n\n    if (found) {\n      return Result.ok<Transaction>(transaction);\n    } else {\n      return Result.fail<Transaction>(\n        `Couldn't find transaction by id=${transactionId}`\n      );\n    }\n  }\n\n  public async getAccessControlContext(\n    request: CreateInvoiceRequestDTO,\n    context?: CreateInvoiceContext\n  ): Promise<AccessControlContext> {\n    return {};\n  }\n\n  @Authorize('create:invoice')\n  public async execute(\n    request: CreateInvoiceRequestDTO,\n    context?: CreateInvoiceContext\n  ): Promise<Result<Invoice>> {\n    const {transactionId: rawTransactionId} = request;\n\n    let transactionId: TransactionId;\n\n    if ('transactionId' in request) {\n      const transactionOrError = await this.getTransaction(request);\n      if (transactionOrError.isFailure) {\n        return Result.fail<Invoice>(transactionOrError.error);\n      }\n      transactionId = TransactionId.create(\n        new UniqueEntityID(rawTransactionId)\n      );\n    }\n\n    try {\n      const invoiceProps = {\n        status: InvoiceStatus.DRAFT\n      } as any;\n      if (transactionId) {\n        invoiceProps.transactionId = transactionId;\n      }\n\n      // * System creates DRAFT invoice\n      const invoiceOrError = Invoice.create(invoiceProps);\n\n      if (invoiceOrError.isFailure) {\n        return Result.fail<Invoice>(invoiceOrError.error);\n      }\n\n      // This is where all the magic happens\n      const invoice = invoiceOrError.getValue();\n      await this.invoiceRepo.save(invoice);\n\n      return Result.ok<Invoice>(invoice);\n    } catch (err) {\n      console.log(err);\n      return Result.fail<Invoice>(err);\n    }\n  }\n}\n","// * Core Domain\nimport {UseCase} from '../../../../core/domain/UseCase';\nimport {Result} from '../../../../core/logic/Result';\nimport {UniqueEntityID} from '../../../../core/domain/UniqueEntityID';\n\nimport {Invoice /* , STATUS as InvoiceStatus*/} from '../../domain/Invoice';\nimport {InvoiceId} from '../../domain/InvoiceId';\nimport {InvoiceRepoContract} from '../../repos/invoiceRepo';\n\nimport {\n  Authorize,\n  AccessControlledUsecase,\n  AuthorizationContext\n} from '../../../../domain/authorization/decorators/Authorize';\nimport {AccessControlContext} from '../../../../domain/authorization/AccessControl';\nimport {Roles} from '../../../users/domain/enums/Roles';\n\nexport interface DeleteInvoiceRequestDTO {\n  invoiceId: string;\n}\n\nexport type DeleteInvoiceContext = AuthorizationContext<Roles>;\n\nexport class DeleteInvoiceUsecase\n  implements\n    UseCase<DeleteInvoiceRequestDTO, Result<unknown>, DeleteInvoiceContext>,\n    AccessControlledUsecase<\n      DeleteInvoiceRequestDTO,\n      DeleteInvoiceContext,\n      AccessControlContext\n    > {\n  private invoiceRepo: InvoiceRepoContract;\n\n  constructor(invoiceRepo: InvoiceRepoContract) {\n    this.invoiceRepo = invoiceRepo;\n  }\n\n  private async getInvoice(\n    request: DeleteInvoiceRequestDTO\n  ): Promise<Result<Invoice>> {\n    const {invoiceId} = request;\n\n    if (!invoiceId) {\n      return Result.fail<Invoice>(`Invalid invoice id=${invoiceId}`);\n    }\n\n    const invoice = await this.invoiceRepo.getInvoiceById(\n      InvoiceId.create(new UniqueEntityID(invoiceId)).getValue()\n    );\n    const found = !!invoice;\n\n    if (found) {\n      return Result.ok<Invoice>(invoice);\n    } else {\n      return Result.fail<Invoice>(`Couldn't find invoice by id=${invoiceId}`);\n    }\n  }\n\n  private async getAccessControlContext(request, context?) {\n    return {};\n  }\n\n  @Authorize('invoice:delete')\n  public async execute(\n    request: DeleteInvoiceRequestDTO,\n    context?: DeleteInvoiceContext\n  ): Promise<Result<unknown>> {\n    try {\n      // * System looks-up the invoice\n      const invoiceOrError = await this.getInvoice(request);\n\n      if (invoiceOrError.isFailure) {\n        return Result.fail<Invoice>(invoiceOrError.error);\n      }\n\n      const invoice = invoiceOrError.getValue();\n\n      // * This is where all the magic happens\n      await this.invoiceRepo.delete(invoice);\n\n      return Result.ok<Invoice>(null);\n    } catch (err) {\n      console.log(err);\n      return Result.fail<Invoice>(err);\n    }\n  }\n}\n","// * Core Domain\nimport {UseCase} from '../../../../core/domain/UseCase';\nimport {Result} from '../../../../core/logic/Result';\nimport {UniqueEntityID} from '../../../../core/domain/UniqueEntityID';\n\nimport {Invoice /* , STATUS as InvoiceStatus*/} from '../../domain/Invoice';\nimport {InvoiceId} from '../../domain/InvoiceId';\nimport {InvoiceRepoContract} from '../../repos/invoiceRepo';\nimport {\n  Authorize,\n  AccessControlledUsecase,\n  AuthorizationContext\n} from '../../../../domain/authorization/decorators/Authorize';\nimport {AccessControlContext} from '../../../../domain/authorization/AccessControl';\nimport {Roles} from '../../../users/domain/enums/Roles';\n\nexport interface GetInvoiceDetailsRequestDTO {\n  invoiceId?: string;\n}\n\nexport type GetInvoiceDetailsContext = AuthorizationContext<Roles>;\n\nexport class GetInvoiceDetailsUsecase\n  implements\n    UseCase<\n      GetInvoiceDetailsRequestDTO,\n      Result<Invoice>,\n      GetInvoiceDetailsContext\n    >,\n    AccessControlledUsecase<\n      GetInvoiceDetailsRequestDTO,\n      GetInvoiceDetailsContext,\n      AccessControlContext\n    > {\n  constructor(private invoiceRepo: InvoiceRepoContract) {\n    this.invoiceRepo = invoiceRepo;\n  }\n\n  private async getInvoice(\n    request: GetInvoiceDetailsRequestDTO\n  ): Promise<Result<Invoice>> {\n    const {invoiceId} = request;\n\n    if (!invoiceId) {\n      return Result.fail<Invoice>(`Invalid invoice id=${invoiceId}`);\n    }\n\n    const invoice = await this.invoiceRepo.getInvoiceById(\n      InvoiceId.create(new UniqueEntityID(invoiceId)).getValue()\n    );\n    const found = !!invoice;\n\n    if (found) {\n      return Result.ok<Invoice>(invoice);\n    } else {\n      return Result.fail<Invoice>(`Couldn't find invoice by id=${invoiceId}`);\n    }\n  }\n\n  private async getAccessControlContext(request, context?) {\n    return {};\n  }\n\n  @Authorize('invoice:read')\n  public async execute(\n    request: GetInvoiceDetailsRequestDTO,\n    context?: GetInvoiceDetailsContext\n  ): Promise<Result<Invoice>> {\n    // if ('transactionId' in request) {\n    //   const transactionOrError = await this.getTransaction(request);\n    //   if (transactionOrError.isFailure) {\n    //     return Result.fail<Invoice>(transactionOrError.error);\n    //   }\n    //   transactionId = TransactionId.create(\n    //     new UniqueEntityID(rawTransactionId)\n    //   );\n    // }\n\n    try {\n      // * System looks-up the invoice\n      const invoiceOrError = await this.getInvoice(request);\n\n      if (invoiceOrError.isFailure) {\n        return Result.fail<Invoice>(invoiceOrError.error);\n      }\n\n      const invoice = invoiceOrError.getValue();\n\n      // * This is where all the magic happens\n      return Result.ok<Invoice>(invoice);\n    } catch (err) {\n      console.log(err);\n      return Result.fail<Invoice>(err);\n    }\n  }\n}\n","// * Core Domain\nimport {AggregateRoot} from '../../../core/domain/AggregateRoot';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Result} from '../../../core/logic/Result';\nimport {Guard} from '../../../core/logic/Guard';\n\n// * Subdomain imports\nimport {Name} from '../../../domain/Name';\nimport {Email} from '../../../domain/Email';\nimport {PhoneNumber} from '../../../domain/PhoneNumber';\nimport {AddressId} from '../../addresses/domain/AddressId';\nimport {PayerId} from './PayerId';\nimport {PayerName} from './PayerName';\nimport {PayerType} from './PayerType';\nimport {PayerTitle} from './PayerTitle';\n\ninterface PayerProps {\n  type: PayerType;\n  title?: PayerTitle;\n  surname: PayerName;\n  name: PayerName;\n  organization?: Name;\n  uniqueIdentificationNumber?: string;\n  email?: Email;\n  phone?: PhoneNumber;\n  billingAddressId?: AddressId;\n  shippingAddressId?: AddressId;\n  VATId?: string;\n  dateAdded?: Date;\n}\n\nexport type PayerCollection = Payer[];\n\nexport class Payer extends AggregateRoot<PayerProps> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  get payerId(): PayerId {\n    return PayerId.create(this.id);\n  }\n\n  get type(): PayerType {\n    return this.props.type;\n  }\n\n  get title(): PayerTitle {\n    return this.props.title;\n  }\n\n  get surname(): PayerName {\n    return this.props.surname;\n  }\n\n  get name(): PayerName {\n    return this.props.name;\n  }\n\n  get email(): Email {\n    return this.props.email;\n  }\n\n  get phone(): PhoneNumber {\n    return this.props.phone;\n  }\n\n  get organization(): Name {\n    return this.props.organization;\n  }\n\n  get shippingAddressId(): AddressId {\n    return this.props.shippingAddressId;\n  }\n\n  get billingAddressId(): AddressId {\n    return this.props.billingAddressId;\n  }\n\n  get dateAdded(): Date {\n    return this.props.dateAdded;\n  }\n\n  get uniqueIdentificationNumber(): string {\n    return this.props.uniqueIdentificationNumber;\n  }\n\n  get VATId(): string {\n    return this.props.VATId;\n  }\n\n  private constructor(props: PayerProps, id?: UniqueEntityID) {\n    super(props, id);\n  }\n\n  public static create(props: PayerProps, id?: UniqueEntityID): Result<Payer> {\n    const propsResult = Guard.againstNullOrUndefinedBulk([\n      {argument: props.name, argumentName: 'name'},\n      {argument: props.surname, argumentName: 'surname'},\n      {argument: props.type, argumentName: 'type'}\n    ]);\n    if (!propsResult.succeeded) {\n      return Result.fail<Payer>(propsResult.message);\n    }\n\n    const payer = new Payer(\n      {\n        ...props,\n        dateAdded: props.dateAdded ? props.dateAdded : new Date()\n      },\n      id\n    );\n\n    return Result.ok<Payer>(payer);\n  }\n\n  public set(key: string, value: any) {\n    this.props[key] = value;\n  }\n}\n","import {Entity} from '../../../core/domain/Entity';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\n\nexport class PayerId extends Entity<any> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  private constructor(id?: UniqueEntityID) {\n    super(null, id);\n  }\n\n  public static create(id?: UniqueEntityID): PayerId {\n    return new PayerId(id);\n  }\n}\n","import {ValueObject} from '../../../core/domain/ValueObject';\nimport {Result} from '../../../core/logic/Result';\n\ninterface PayerNameProps {\n  value: string;\n}\n\nexport class PayerName extends ValueObject<PayerNameProps> {\n  get value(): string {\n    return this.props.value;\n  }\n\n  private constructor(props: PayerNameProps) {\n    super(props);\n  }\n\n  public static create(name: string): Result<PayerName> {\n    if (!!name === false || name.length === 0) {\n      return Result.fail<PayerName>('Must provide a payer name');\n    } else {\n      return Result.ok<PayerName>(new PayerName({value: name}));\n    }\n  }\n}\n","import {ValueObject} from '../../../core/domain/ValueObject';\nimport {Result} from '../../../core/logic/Result';\n\ninterface PayerTitleProps {\n  value: string;\n}\n\nexport class PayerTitle extends ValueObject<PayerTitleProps> {\n  get value(): string {\n    return this.props.value;\n  }\n\n  private constructor(props: PayerTitleProps) {\n    super(props);\n  }\n\n  public static create(type: string): Result<PayerTitle> {\n    if (!!type === false || type.length === 0) {\n      return Result.fail<PayerTitle>('Must provide a payer title');\n    } else {\n      return Result.ok<PayerTitle>(new PayerTitle({value: type}));\n    }\n  }\n}\n","import {ValueObject} from '../../../core/domain/ValueObject';\nimport {Result} from '../../../core/logic/Result';\n\ninterface PayerTypeProps {\n  value: string;\n}\n\nexport class PayerType extends ValueObject<PayerTypeProps> {\n  get value(): string {\n    return this.props.value;\n  }\n\n  private constructor(props: PayerTypeProps) {\n    super(props);\n  }\n\n  public static create(type: string): Result<PayerType> {\n    if (!!type === false || type.length === 0) {\n      return Result.fail<PayerType>('Must provide a payer type');\n    } else {\n      return Result.ok<PayerType>(new PayerType({value: type}));\n    }\n  }\n}\n","import {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Name} from '../../../domain/Name';\nimport {PhoneNumber} from '../../../domain/PhoneNumber';\nimport {Email} from '../../../domain/Email';\nimport {AddressId} from '../../addresses/domain/AddressId';\nimport {Mapper} from '../../../infrastructure/Mapper';\n\nimport {Payer} from '../domain/Payer';\nimport {PayerTitle} from '../domain/PayerTitle';\nimport {PayerName} from '../domain/PayerName';\nimport {PayerType} from '../domain/PayerType';\n\nexport interface PayerPersistenceDTO {\n  id: string;\n  title: string;\n  surname: string;\n  name: string;\n  organization: string;\n  uniqueIdentificationNumber: string;\n  email: string;\n  phone: string;\n  type: string;\n  shippingAddressId: string;\n  billingAddressId: string;\n  VATId: string;\n  dateAdded: Date;\n}\n\nexport class PayerMap extends Mapper<Payer> {\n  public static toDomain(raw: PayerPersistenceDTO): Payer {\n    const result = Payer.create(\n      {\n        title: PayerTitle.create(raw.title).getValue(),\n        type: PayerType.create(raw.type).getValue(),\n        surname: PayerName.create(raw.surname).getValue(),\n        name: PayerName.create(raw.name).getValue(),\n        organization: Name.create(raw.organization).getValue(),\n        email: Email.create(raw.email).getValue(),\n        phone: PhoneNumber.create(raw.phone).getValue(),\n        shippingAddressId: AddressId.create(\n          new UniqueEntityID(raw.shippingAddressId)\n        ),\n        billingAddressId: AddressId.create(\n          new UniqueEntityID(raw.billingAddressId)\n        ),\n        VATId: raw.VATId,\n        dateAdded: new Date(raw.dateAdded)\n      },\n      new UniqueEntityID(raw.id)\n    );\n\n    if (result.isFailure) {\n      console.log(result);\n    }\n\n    return result.isSuccess ? result.getValue() : null;\n  }\n\n  public static toPersistence(payer: Payer): PayerPersistenceDTO {\n    return {\n      id: payer.id.toString(),\n      type: payer.type.value,\n      title: payer.title.value,\n      surname: payer.surname.value,\n      name: payer.name.value,\n      organization: payer.organization.value,\n      email: payer.email.value,\n      phone: payer.phone.value,\n      uniqueIdentificationNumber: payer.uniqueIdentificationNumber,\n      shippingAddressId: payer.shippingAddressId.id.toString(),\n      billingAddressId: payer.billingAddressId.id.toString(),\n      dateAdded: payer.dateAdded,\n      VATId: payer.VATId\n    };\n  }\n}\n","// * Core Domain\nimport {AggregateRoot} from '../../../core/domain/AggregateRoot';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Result} from '../../../core/logic/Result';\nimport {File} from '../../../domain/File';\nimport {Amount} from '../../../domain/Amount';\n\n// * Subdomain\nimport {InvoiceId} from '../../invoices/domain/InvoiceId';\nimport {PayerId} from '../../payers/domain/PayerId';\nimport {PaymentId} from './PaymentId';\nimport {PaymentMethodId} from './PaymentMethodId';\n\ninterface PaymentProps {\n  invoiceId: InvoiceId;\n  payerId: PayerId;\n  amount: Amount;\n  paymentMethodId?: PaymentMethodId;\n  foreignPaymentId?: string;\n  datePaid?: Date;\n  paymentProof?: File;\n}\n\nexport class Payment extends AggregateRoot<PaymentProps> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  get paymentId(): PaymentId {\n    return PaymentId.create(this.id);\n  }\n\n  get invoiceId(): InvoiceId {\n    return this.props.invoiceId;\n  }\n\n  get payerId(): PayerId {\n    return this.props.payerId;\n  }\n\n  get paymentMethodId(): PaymentMethodId {\n    return this.props.paymentMethodId;\n  }\n\n  get paymentProof(): File {\n    return this.props.paymentProof;\n  }\n\n  get amount(): Amount {\n    return this.props.amount;\n  }\n\n  get datePaid(): Date {\n    return this.props.datePaid;\n  }\n\n  get foreignPaymentId(): string {\n    return this.props.foreignPaymentId;\n  }\n\n  private constructor(props: PaymentProps, id?: UniqueEntityID) {\n    super(props, id);\n  }\n\n  public static create(\n    props: PaymentProps,\n    id?: UniqueEntityID\n  ): Result<Payment> {\n    const payment = new Payment(\n      {\n        ...props\n      },\n      id\n    );\n    return Result.ok<Payment>(payment);\n  }\n}\n","import {Entity} from '../../../core/domain/Entity';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\n\nexport class PaymentId extends Entity<any> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  private constructor(id?: UniqueEntityID) {\n    super(null, id);\n  }\n\n  public static create(id?: UniqueEntityID): PaymentId {\n    return new PaymentId(id);\n  }\n}\n","// * Core Domain\nimport {AggregateRoot} from '../../../core/domain/AggregateRoot';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Result} from '../../../core/logic/Result';\n// import {Guard} from '../../core/Guard';\n\n// * Subdomain\nimport {PaymentMethodId} from './PaymentMethodId';\n\ninterface PaymentMethodProps {\n  name: string;\n  isActive: boolean;\n}\n\nexport class PaymentMethod extends AggregateRoot<PaymentMethodProps> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  get paymentMethodId(): PaymentMethodId {\n    return PaymentMethodId.create(this.id);\n  }\n\n  get name(): string {\n    return this.props.name;\n  }\n\n  get isActive(): boolean {\n    return this.props.isActive;\n  }\n\n  set isActive(toggle: boolean) {\n    this.props.isActive = toggle;\n  }\n\n  private constructor(props: PaymentMethodProps, id?: UniqueEntityID) {\n    super(props, id);\n  }\n\n  public static create(\n    props: PaymentMethodProps,\n    id?: UniqueEntityID\n  ): Result<PaymentMethod> {\n    // const guardResult = Guard.againstNullOrUndefinedBulk([\n    //   {argument: props.email, argumentName: 'email'},\n    //   {argument: props.password, argumentName: 'password'}\n    // ]);\n    // if (!guardResult.succeeded) {\n    //   return Result.fail<User>(guardResult.message);\n    // } else {\n    const paymentMethod = new PaymentMethod(\n      {\n        ...props\n      },\n      id\n    );\n    // const idWasProvided = !!id;\n    // if (!idWasProvided) {\n    //   user.addDomainEvent(new UserCreatedEvent(user));\n    // }\n    return Result.ok<PaymentMethod>(paymentMethod);\n  }\n}\n","import {Entity} from '../../../core/domain/Entity';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\n\nexport class PaymentMethodId extends Entity<any> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  private constructor(id?: UniqueEntityID) {\n    super(null, id);\n  }\n\n  public static create(id?: UniqueEntityID): PaymentMethodId {\n    return new PaymentMethodId(id);\n  }\n}\n","import {PaymentModel} from './PaymentModel';\nimport {PaymentGateway} from './PaymentGateway';\n\nexport abstract class PaymentService<\n  T extends PaymentModel,\n  G extends PaymentGateway\n> {\n  public appliesTo(provider: any): boolean {\n    return `@${this.constructor.name}` === Symbol.keyFor(provider);\n  }\n\n  public abstract makePayment(model: PaymentModel, amount: number): void;\n}\n","import {PaymentModel} from '../contracts/PaymentModel';\n\nexport class CreditCard implements PaymentModel {\n  CREDIT_CARD_PAYMENT = Symbol.for('@CreditCardPayment');\n\n  public CardHolderName: string;\n  public CardNumber: string;\n  public ExpirationMonth: number;\n  public ExpirationYear: number;\n\n  get cardHolder(): string {\n    return this.CardHolderName;\n  }\n\n  set cardHolder(value: string) {\n    this.CardHolderName = value;\n  }\n\n  get cardNumber(): string {\n    return this.CardNumber;\n  }\n  set cardNumber(value: string) {\n    this.CardNumber = value;\n  }\n  get expirationMonth(): number {\n    return this.ExpirationMonth;\n  }\n  set expirationMonth(value: number) {\n    this.ExpirationMonth = value;\n  }\n  get expirationYear(): number {\n    return this.ExpirationYear;\n  }\n\n  set expirationYear(value: number) {\n    this.ExpirationYear = value;\n  }\n\n  public getType(): symbol {\n    return this.CREDIT_CARD_PAYMENT;\n  }\n}\n","import {CreditCard} from './CreditCard';\nimport {PaymentService} from '../contracts/PaymentService';\nimport {PaymentGateway} from '../contracts/PaymentGateway';\n\nexport class CreditCardPayment extends PaymentService<\n  CreditCard,\n  PaymentGateway\n> {\n  // private ccNum: string = '';\n  // private ccType: string = '';\n  // private cvvNum: string = '';\n  // private ccExpMonth: string = '';\n  // private ccExpYear: string = '';\n\n  constructor(private paymentGateway: PaymentGateway) {\n    super();\n    this.paymentGateway = paymentGateway;\n  }\n\n  public async makePayment(pm: CreditCard, amount: number): Promise<any> {\n    console.log(\n      `Paying ${amount} using Credit Card method with \"${this.paymentGateway.config.environment.server}\"`\n    );\n\n    // const clientToken: string = await this.generateClientToken();\n    // await this.findPaymentMethodNonce(paymentMethodNonce);\n    // const paymentMethod = await this.createPaymentMethod();\n    const paymentMethodNonce = await this.createPaymentMethodNonce();\n\n    return this.createTransaction(paymentMethodNonce, amount);\n  }\n\n  private async createTransaction(\n    paymentMethodNonce: string,\n    amount: number\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.paymentGateway.transaction.sale(\n        {\n          amount,\n          paymentMethodNonce,\n          options: {\n            // threeDSecure: true,\n            submitForSettlement: true\n          }\n        },\n        (err: any, result: any) => {\n          if (err) {\n            return reject(err);\n          }\n          return resolve(result);\n        }\n      );\n    });\n  }\n\n  // private async generateClientToken(): Promise<any> {\n  //   return new Promise((resolve, reject) => {\n  //     this.paymentGateway.clientToken.generate(\n  //       {},\n  //       (err: any, response: any) => {\n  //         const {clientToken} = response;\n  //         return resolve(clientToken);\n  //       }\n  //     );\n  //   });\n  // }\n\n  // private async createPaymentMethod(): Promise<any> {\n  //   return new Promise((resolve, reject) => {\n  //     this.paymentGateway.paymentMethod.create(\n  //       {},\n  //       (err: any, response: any) => {\n  //         const {clientToken} = response;\n  //         return resolve(clientToken);\n  //       }\n  //     );\n  //   });\n  // }\n\n  private async createPaymentMethodNonce(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.paymentGateway.paymentMethodNonce.create(\n        'PersonalCard',\n        (err: any, response: any) => {\n          if (err) {\n            console.info(err);\n            return reject(err);\n          }\n          const {nonce} = response.paymentMethodNonce;\n          return resolve(nonce);\n        }\n      );\n    });\n  }\n\n  // private async findPaymentMethodNonce(nonce: string): Promise<any> {\n  //   return new Promise((resolve, reject) => {\n  //     this.paymentGateway.paymentMethodNonce.find(\n  //       nonce,\n  //       (err: any, response: any) => {\n  //         if (err) {\n  //           console.info(err);\n  //           return reject(err);\n  //         }\n  //         console.info(response);\n  //         // const {nonce} = response.paymentMethodNonce;\n  //         // return resolve(nonce);\n  //       }\n  //     );\n  //   });\n  // }\n}\n","import {PaymentModel} from '../contracts/PaymentModel';\n\nexport class PaymentFactory {\n  payments = new Map();\n\n  /**\n   * All available gateways\n   *\n   * @return array An array of gateway names\n   */\n  public all() {\n    return this.payments;\n  }\n\n  public registerPayment(pm: PaymentModel) {\n    this.payments.set(pm.getType(), pm);\n  }\n\n  /**\n   * Create a new payment instance\n   *\n   */\n  public create(paymentType: string) {\n    return this.payments.get(this.createSymbolOf(paymentType));\n  }\n\n  private createSymbolOf(value: string): symbol {\n    return Symbol.for(`@${value}`);\n  }\n}\n","import {PaymentGateway} from '../contracts/PaymentGateway';\nimport {PaymentService} from '../contracts/PaymentService';\nimport {PaymentStrategyContract} from '../contracts/PaymentStrategy';\nimport {PaymentModel} from '../contracts/PaymentModel';\n\nexport class PaymentStrategy implements PaymentStrategyContract {\n  private paymentServices: Map<\n    string,\n    PaymentService<PaymentModel, PaymentGateway>\n  >;\n\n  public constructor(paymentServices: any) {\n    if (paymentServices === null) {\n      throw new Error(typeof paymentServices);\n    }\n    this.paymentServices = new Map(paymentServices);\n  }\n\n  public async makePayment(model: PaymentModel, amount = 0): Promise<unknown> {\n    return this.getPaymentService(model).makePayment(model, amount);\n  }\n\n  private getPaymentService(\n    model: PaymentModel\n  ): PaymentService<PaymentModel, PaymentGateway> {\n    const [result] = Array.from(this.paymentServices.values()).filter(p => {\n      return p.appliesTo(model.getType());\n    });\n\n    if (result === null) {\n      throw new Error(\n        `Payment service for ${model.getType().toString()} not registered.`\n      );\n    }\n\n    return result;\n  }\n}\n","import * as braintree from 'braintree';\n\nlet environment = '';\nlet BraintreeGateway: braintree.BraintreeGateway = null;\n\nrequire('dotenv').config();\n\nif (\n  !process.env.BT_ENVIRONMENT ||\n  !process.env.BT_MERCHANT_ID ||\n  !process.env.BT_PUBLIC_KEY ||\n  !process.env.BT_PRIVATE_KEY\n) {\n  throw new Error(\n    'Cannot find necessary environmental variables. See https://github.com/braintree/braintree_express_example#setup-instructions for instructions'\n  );\n}\n\nenvironment =\n  process.env.BT_ENVIRONMENT.charAt(0).toUpperCase() +\n  process.env.BT_ENVIRONMENT.slice(1);\n\nBraintreeGateway = new braintree.BraintreeGateway({\n  environment: braintree.Environment[environment],\n  merchantId: process.env.BT_MERCHANT_ID,\n  publicKey: process.env.BT_PUBLIC_KEY,\n  privateKey: process.env.BT_PRIVATE_KEY\n});\n\nexport {BraintreeGateway};\n","import {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Mapper} from '../../../infrastructure/Mapper';\nimport {Payment} from '../domain/Payment';\nimport {PaymentMethodId} from '../domain/PaymentMethodId';\nimport {InvoiceId} from '../../invoices/domain/InvoiceId';\nimport {PayerId} from '../../payers/domain/PayerId';\nimport {Amount} from '../../../domain/Amount';\nimport {FilePersistenceDTO} from '../../../infrastructure/mapper/File';\n\nexport interface PaymentPersistenceDTO {\n  id: string;\n  payerId: string;\n  invoiceId: string;\n  amount: number;\n  paymentMethodId: string;\n  foreignPaymentId: string;\n  datePaid: Date;\n  paymentProof?: FilePersistenceDTO;\n}\n\nexport class PaymentMap extends Mapper<Payment> {\n  public static toDomain(raw: PaymentPersistenceDTO): Payment {\n    const invoiceOrError = Payment.create(\n      {\n        payerId: PayerId.create(new UniqueEntityID(raw.payerId)),\n        invoiceId: InvoiceId.create(\n          new UniqueEntityID(raw.invoiceId)\n        ).getValue(),\n        amount: Amount.create(raw.amount).getValue(),\n        paymentMethodId: PaymentMethodId.create(\n          new UniqueEntityID(raw.paymentMethodId)\n        ),\n        foreignPaymentId: raw.foreignPaymentId,\n        datePaid: new Date(raw.datePaid)\n        //  paymentProof: FileMap.toDomain(raw.paymentProof)\n      },\n      new UniqueEntityID(raw.id)\n    );\n\n    invoiceOrError.isFailure ? console.log(invoiceOrError) : '';\n\n    return invoiceOrError.isSuccess ? invoiceOrError.getValue() : null;\n  }\n\n  public static toPersistence(payment: Payment): PaymentPersistenceDTO {\n    return {\n      id: payment.id.toString(),\n      invoiceId: payment.invoiceId.id.toString(),\n      payerId: payment.payerId.id.toString(),\n      paymentMethodId: payment.paymentMethodId.id.toString(),\n      amount: payment.amount.value,\n      datePaid: payment.datePaid,\n      foreignPaymentId: payment.foreignPaymentId\n      // paymentProof: FileMap.toPersistence(payment.paymentProof)\n    };\n  }\n}\n","import {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Mapper} from '../../../infrastructure/Mapper';\nimport {PaymentMethod} from '../domain/PaymentMethod';\n\nexport interface PaymentMethodPersistenceDTO {\n  id: string;\n  name: string;\n  isActive: boolean;\n}\n\nexport class PaymentMethodMap extends Mapper<PaymentMethod> {\n  public static toDomain(raw: PaymentMethodPersistenceDTO): PaymentMethod {\n    const paymentMethodOrError = PaymentMethod.create(\n      {\n        name: raw.name,\n        isActive: !!raw.isActive\n      },\n      new UniqueEntityID(raw.id)\n    );\n\n    paymentMethodOrError.isFailure ? console.log(paymentMethodOrError) : '';\n\n    return paymentMethodOrError.isSuccess\n      ? paymentMethodOrError.getValue()\n      : null;\n  }\n\n  public static toPersistence(\n    paymentMethod: PaymentMethod\n  ): PaymentMethodPersistenceDTO {\n    return {\n      id: paymentMethod.id.toString(),\n      name: paymentMethod.name,\n      isActive: paymentMethod.isActive\n    };\n  }\n}\n","import {WatchedList} from '../../../core/domain/WatchedList';\nimport {Invoice} from '../../invoices/domain/Invoice';\n\nexport class Invoices extends WatchedList<Invoice> {\n  private constructor(initialInvoices: Invoice[]) {\n    super(initialInvoices);\n  }\n\n  public compareItems(a: Invoice, b: Invoice): boolean {\n    return a.equals(b);\n  }\n\n  public static create(invoices?: Invoice[]): Invoices {\n    return new Invoices(invoices ? invoices : []);\n  }\n}\n","// * Core Domain\nimport {AggregateRoot} from '../../../core/domain/AggregateRoot';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Result} from '../../../core/logic/Result';\n\n// * Subdomain\nimport {Invoice} from '../../../modules/invoices/domain/Invoice';\nimport {TransactionId} from './TransactionId';\nimport {Invoices} from './Invoices';\n\nexport enum STATUS {\n  DRAFT, // after the internal object has been created\n  ACTIVE, // after the Author confirms the list of Payers. An event shall be publicized on the Event Bus.\n  FINAL // after all its associated invoices are being set to final. An event shall be publicized on the Event Bus.\n}\n\ninterface TransactionProps {\n  status: STATUS; // TransactionState\n  invoices?: Invoices;\n  dateCreated?: Date; // CreateTimestamp\n  dateUpdated?: Date; // LastUpdateTimestamp\n  deleted?: number; // soft delete\n  totalNumInvoices?: number;\n}\n\nexport type TransactionCollection = Transaction[];\n\nexport class Transaction extends AggregateRoot<TransactionProps> {\n  /**\n   * * Getters\n   */\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  get transactionId(): TransactionId {\n    return TransactionId.create(this.id);\n  }\n\n  get status(): STATUS {\n    return this.props.status;\n  }\n\n  get dateCreated(): Date {\n    return this.props.dateCreated;\n  }\n\n  get dateUpdated(): Date {\n    return this.props.dateUpdated;\n  }\n\n  get deleted(): number {\n    return this.props.deleted;\n  }\n\n  get invoices(): Invoices {\n    return this.props.invoices;\n  }\n\n  get totalNumInvoices(): number {\n    return this.props.totalNumInvoices;\n  }\n\n  // get netAmount(): number {\n  //   return this.props.invoices.reduce((amount: number, invoice: Invoice) => {\n  //     // invoice.netAmount = Math.round(\n  //     //   this.amount.value / this.props.invoices.length\n  //     // );\n  //     amount += invoice.invoiceItems.reduce(\n  //       (price: number, invoiceItem: InvoiceItem) => {\n  //         price += invoiceItem.price;\n  //         return price;\n  //       },\n  //       0\n  //     );\n  //     return amount;\n  //   }, 0);\n  // }\n\n  private constructor(props: TransactionProps, id?: UniqueEntityID) {\n    super(props, id);\n  }\n\n  public static create(\n    props: TransactionProps,\n    id?: UniqueEntityID\n  ): Result<Transaction> {\n    const defaultValues: TransactionProps = {\n      ...props,\n      invoices: props.invoices ? props.invoices : Invoices.create([]),\n      totalNumInvoices: props.totalNumInvoices ? props.totalNumInvoices : 0,\n      dateCreated: props.dateCreated ? props.dateCreated : new Date()\n    };\n    const transaction = new Transaction(defaultValues, id);\n\n    // TODO: Waiting confirmation from the PO.\n    // const idWasProvided = !!id;\n    // if (!idWasProvided) {\n    //   transaction.addDomainEvent(\n    //     new TransactionCreatedEvent(transaction, new Date())\n    //   );\n    // }\n\n    return Result.ok<Transaction>(transaction);\n  }\n\n  private removeInvoiceIfExists(invoice: Invoice): void {\n    if (this.props.invoices.exists(invoice)) {\n      this.props.invoices.remove(invoice);\n    }\n  }\n\n  public addInvoice(invoice: Invoice): Result<void> {\n    this.removeInvoiceIfExists(invoice);\n    this.props.invoices.add(invoice);\n    this.props.totalNumInvoices++;\n    // this.addDomainEvent(new CommentPosted(this, comment));\n    return Result.ok<void>();\n  }\n\n  // public removeInvoice(invoice: Invoice): void {\n  //   this.props.invoices = this.props.invoices.filter(\n  //     i => !i.id.equals(invoice.id)\n  //   );\n\n  //   // adjust invoices net amounts\n  //   this.adjustInvoices();\n  // }\n\n  // public clearInvoices(): void {\n  //   this.props.invoices = [];\n  // }\n\n  // private adjustInvoices(): void {\n  //   this.props.invoices.forEach(invoice => {\n  //     // invoice.netAmount = Math.round(\n  //     //   this.amount.value / this.props.invoices.length\n  //     // );\n  //   });\n  // }\n\n  public markAsFinal(): void {\n    const now = new Date();\n    this.props.dateUpdated = now;\n    this.props.status = STATUS.FINAL;\n    // this.addDomainEvent(new InvoicePaidEvent(this.invoiceId, now));\n  }\n}\n","import {ValueObject} from '../../../core/domain/ValueObject';\nimport {Result} from '../../../core/logic/Result';\n\ninterface TransactionAmountProps {\n  value: number;\n}\n\nexport class TransactionAmount extends ValueObject<TransactionAmountProps> {\n  get value(): number {\n    return this.props.value;\n  }\n\n  private constructor(props: TransactionAmountProps) {\n    super(props);\n  }\n\n  public static create(value: number): Result<TransactionAmount> {\n    if (isNaN(value) || value === 0 || value < 0) {\n      return Result.fail<TransactionAmount>('Must provide a valid amount');\n    } else {\n      return Result.ok<TransactionAmount>(new TransactionAmount({value}));\n    }\n  }\n}\n","import {Entity} from '../../../core/domain/Entity';\nimport {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\n\nexport class TransactionId extends Entity<any> {\n  get id(): UniqueEntityID {\n    return this._id;\n  }\n\n  private constructor(id?: UniqueEntityID) {\n    super(null, id);\n  }\n\n  public static create(id?: UniqueEntityID): TransactionId {\n    return new TransactionId(id);\n  }\n}\n","import {UniqueEntityID} from '../../../core/domain/UniqueEntityID';\nimport {Mapper} from '../../../infrastructure/Mapper';\nimport {Transaction} from '../domain/Transaction';\n\nexport class TransactionMap extends Mapper<Transaction> {\n  public static toDomain(raw: any): Transaction {\n    const transactionOrError = Transaction.create(\n      {\n        deleted: raw.deleted,\n        status: raw.status,\n        dateCreated: new Date(raw.dateCreated),\n        dateUpdated: new Date(raw.dateUpdated)\n      },\n      new UniqueEntityID(raw.id)\n    );\n\n    transactionOrError.isFailure ? console.log(transactionOrError) : '';\n\n    return transactionOrError.isSuccess ? transactionOrError.getValue() : null;\n  }\n\n  public static toPersistence(transaction: Transaction): any {\n    return {\n      id: transaction.id.toString(),\n      status: transaction.status,\n      dateCreated: transaction.dateCreated,\n      dateUpdated: transaction.dateUpdated\n    };\n  }\n}\n","import {Knex} from '@hindawi/shared';\n\nimport {Transaction} from '../../domain/Transaction';\nimport {TransactionId} from '../../domain/TransactionId';\nimport {TransactionMap} from '../../mappers/TransactionMap';\nimport {InvoiceId} from './../../../invoices/domain/InvoiceId';\n\nimport {AbstractBaseDBRepo} from '../../../../infrastructure/AbstractBaseDBRepo';\nimport {RepoError} from '../../../../infrastructure/RepoError';\nimport {TransactionRepoContract} from '../transactionRepo';\n\nexport class KnexTransactionRepo extends AbstractBaseDBRepo<Knex, Transaction>\n  implements TransactionRepoContract {\n  async getTransactionById(transactionId: TransactionId): Promise<Transaction> {\n    const {db} = this;\n\n    const transactionRow = await db('transactions')\n      .select()\n      .where('id', transactionId.id.toString())\n      .first();\n\n    return transactionRow ? TransactionMap.toDomain(transactionRow) : null;\n  }\n\n  async getTransactionByInvoiceId(invoiceId: InvoiceId): Promise<Transaction> {\n    const {db} = this;\n\n    const transactionRow = await db('transactions')\n      .select()\n      .where('invoice_id', invoiceId.id.toString())\n      .first();\n\n    return transactionRow ? TransactionMap.toDomain(transactionRow) : null;\n  }\n\n  async getTransactionCollection(): Promise<Transaction[]> {\n    const {db} = this;\n\n    const transactionsRows = await db('transactions');\n\n    return transactionsRows.reduce((aggregator: any[], t) => {\n      aggregator.push(TransactionMap.toDomain(t));\n      return aggregator;\n    }, []);\n  }\n\n  async delete(transaction: Transaction): Promise<unknown> {\n    const {db} = this;\n\n    const deletedRows = await db('transactions')\n      .where('id', transaction.id.toString())\n      .update({...TransactionMap.toPersistence(transaction), deleted: 1});\n\n    return deletedRows\n      ? deletedRows\n      : Promise.reject(\n          RepoError.createEntityNotFoundError(\n            'transaction',\n            transaction.id.toString()\n          )\n        );\n  }\n\n  async update(transaction: Transaction): Promise<Transaction> {\n    const {db} = this;\n\n    const updated = await db('transactions')\n      .where({id: transaction.id.toString()})\n      .update(TransactionMap.toPersistence(transaction));\n\n    if (!updated) {\n      throw RepoError.createEntityNotFoundError(\n        'transaction',\n        transaction.id.toString()\n      );\n    }\n\n    return transaction;\n  }\n\n  async exists(transaction: Transaction): Promise<boolean> {\n    const result = await this.getTransactionById(transaction.transactionId);\n\n    return !!result;\n  }\n\n  async save(transaction: Transaction): Promise<Transaction> {\n    const {db} = this;\n\n    const data = TransactionMap.toPersistence(transaction);\n\n    await db('transactions').insert(data);\n\n    return this.getTransactionById(transaction.transactionId);\n  }\n}\n","import {TransactionRepoContract} from './transactionRepo';\nimport {KnexTransactionRepo} from './implementations/knexTransactionRepo';\n\nexport {TransactionRepoContract, KnexTransactionRepo};\n","// * Core Domain\nimport {UseCase} from '../../../../core/domain/UseCase';\nimport {Result} from '../../../../core/logic/Result';\nimport {UniqueEntityID} from '../../../../core/domain/UniqueEntityID';\nimport {TextUtil} from '../../../../utils/TextUtil';\n\nimport {\n  Transaction,\n  STATUS as TransactionStatus\n} from '../../domain/Transaction';\nimport {TransactionRepoContract} from '../../repos/transactionRepo';\nimport {ArticleRepoContract} from '../../../articles/repos/articleRepo';\nimport {Article} from '../../../articles/domain/Article';\nimport {ArticleId} from '../../../articles/domain/ArticleId';\nimport {Invoice, InvoiceStatus} from './../../../invoices/domain/Invoice';\nimport {InvoiceItem} from './../../../invoices/domain/InvoiceItem';\nimport {InvoiceRepoContract} from './../../../invoices/repos/invoiceRepo';\nimport {InvoiceItemRepoContract} from './../../../invoices/repos/invoiceItemRepo';\nimport {ManuscriptId} from '../../../invoices/domain/ManuscriptId';\n\nimport {\n  Authorize,\n  AccessControlledUsecase,\n  AuthorizationContext\n} from '../../../../domain/authorization/decorators/Authorize';\nimport {AccessControlContext} from '../../../../domain/authorization/AccessControl';\nimport {Roles} from '../../../users/domain/enums/Roles';\n\nexport interface CreateTransactionRequestDTO {\n  manuscriptId?: string;\n  journalId?: string;\n  title?: string;\n  articleTypeId?: string;\n  created?: string;\n  authorEmail?: string;\n  authorCountry?: string;\n  authorSurname?: string;\n}\n\nexport type CreateTransactionContext = AuthorizationContext<Roles>;\n\nexport class CreateTransactionUsecase\n  implements\n    UseCase<\n      CreateTransactionRequestDTO,\n      Result<Transaction>,\n      CreateTransactionContext\n    >,\n    AccessControlledUsecase<\n      CreateTransactionRequestDTO,\n      CreateTransactionContext,\n      AccessControlContext\n    > {\n  constructor(\n    private transactionRepo: TransactionRepoContract,\n    private articleRepo: ArticleRepoContract,\n    private invoiceRepo: InvoiceRepoContract,\n    private invoiceItemRepo: InvoiceItemRepoContract\n  ) {\n    this.transactionRepo = transactionRepo;\n    this.articleRepo = articleRepo;\n    this.invoiceRepo = invoiceRepo;\n    this.invoiceItemRepo = invoiceItemRepo;\n  }\n\n  private async getArticle(\n    request: CreateTransactionRequestDTO,\n    context?: CreateTransactionContext\n  ): Promise<Result<Article>> {\n    const {\n      manuscriptId,\n      journalId,\n      title,\n      articleTypeId,\n      authorEmail,\n      authorCountry,\n      authorSurname\n    } = request;\n    const isArticleIdProvided = TextUtil.isUUID(manuscriptId);\n\n    if (isArticleIdProvided) {\n      if (!manuscriptId) {\n        return Result.fail<Article>(`Invalid manuscript id=${manuscriptId}`);\n      }\n\n      const article = await this.articleRepo.findById(\n        ManuscriptId.create(new UniqueEntityID(manuscriptId)).getValue()\n      );\n      const found = !!article;\n\n      if (found) {\n        return Result.ok<Article>(article);\n      } else {\n        return Result.fail<Article>(\n          `Couldn't find manuscript by id=${manuscriptId}`\n        );\n      }\n    } else {\n      const newArticleResult: Result<Article> = Article.create({\n        journalId,\n        title,\n        articleTypeId,\n        authorEmail,\n        authorCountry,\n        authorSurname\n      });\n      await this.articleRepo.save(newArticleResult.getValue());\n      return newArticleResult;\n    }\n  }\n\n  private async getAccessControlContext(request, context?) {\n    return {};\n  }\n\n  @Authorize('transaction:create')\n  public async execute(\n    request: CreateTransactionRequestDTO,\n    context?: CreateTransactionContext\n  ): Promise<Result<Transaction>> {\n    const {manuscriptId: rawManuscriptId} = request;\n\n    let manuscriptId: ArticleId;\n\n    if ('manuscriptId' in request) {\n      const articleOrError = await this.getArticle(request);\n      if (articleOrError.isFailure) {\n        return Result.fail<Transaction>(articleOrError.error);\n      }\n      manuscriptId = ArticleId.create(new UniqueEntityID(rawManuscriptId));\n    }\n\n    try {\n      const transactionProps = {\n        status: TransactionStatus.DRAFT\n      } as any;\n\n      // * System creates DRAFT transaction\n      const transactionOrError = Transaction.create(transactionProps);\n\n      if (transactionOrError.isFailure) {\n        return Result.fail<Transaction>(transactionOrError.error);\n      }\n\n      // This is where all the magic happens\n      const transaction = transactionOrError.getValue();\n      await this.transactionRepo.save(transaction);\n\n      // * System creates DRAFT invoice\n      const invoiceProps = {\n        status: InvoiceStatus.DRAFT,\n        transactionId: transaction.transactionId\n      };\n\n      const invoiceOrError = Invoice.create(invoiceProps);\n      if (invoiceOrError.isFailure) {\n        return Result.fail<Transaction>(invoiceOrError.error);\n      }\n      const invoice = invoiceOrError.getValue();\n      await this.invoiceRepo.save(invoice);\n\n      //* System creates invoice item(s)\n      const invoiceItemProps = {\n        manuscriptId,\n        invoiceId: invoice.invoiceId,\n        dateCreated: new Date()\n      };\n      const invoiceItemOrError = InvoiceItem.create(invoiceItemProps);\n      if (invoiceItemOrError.isFailure) {\n        return Result.fail<Transaction>(invoiceItemOrError.error);\n      }\n      const invoiceItem = invoiceItemOrError.getValue();\n      await this.invoiceItemRepo.save(invoiceItem);\n\n      return Result.ok<Transaction>(transaction);\n    } catch (err) {\n      console.log(err);\n      return Result.fail<Transaction>(err);\n    }\n  }\n}\n","// * Core Domain\nimport {UseCase} from '../../../../core/domain/UseCase';\nimport {Result} from '../../../../core/logic/Result';\nimport {UniqueEntityID} from '../../../../core/domain/UniqueEntityID';\n\nimport {Transaction} from '../../domain/Transaction';\nimport {TransactionId} from '../../domain/TransactionId';\nimport {TransactionRepoContract} from '../../repos/transactionRepo';\n\nimport {\n  Authorize,\n  AccessControlledUsecase,\n  AuthorizationContext\n} from '../../../../domain/authorization/decorators/Authorize';\nimport {AccessControlContext} from '../../../../domain/authorization/AccessControl';\nimport {Roles} from '../../../users/domain/enums/Roles';\n\nexport interface GetTransactionRequestDTO {\n  transactionId?: string;\n}\n\nexport type GetTransactionContext = AuthorizationContext<Roles>;\n\nexport class GetTransactionUsecase\n  implements\n    UseCase<\n      GetTransactionRequestDTO,\n      Result<Transaction>,\n      GetTransactionContext\n    >,\n    AccessControlledUsecase<\n      GetTransactionRequestDTO,\n      GetTransactionContext,\n      AccessControlContext\n    > {\n  constructor(private transactionRepo: TransactionRepoContract) {\n    this.transactionRepo = transactionRepo;\n  }\n\n  private async getTransaction(\n    request: GetTransactionRequestDTO\n  ): Promise<Result<Transaction>> {\n    const {transactionId} = request;\n\n    if (!transactionId) {\n      return Result.fail<Transaction>(\n        `Invalid Transaction id=${transactionId}`\n      );\n    }\n    const transaction = await this.transactionRepo.getTransactionById(\n      TransactionId.create(new UniqueEntityID(transactionId))\n    );\n    const found = !!transaction;\n\n    if (found) {\n      return Result.ok<Transaction>(transaction);\n    } else {\n      return Result.fail<Transaction>(\n        `Couldn't find transaction by id=${transactionId}`\n      );\n    }\n  }\n\n  private async getAccessControlContext(request, context?) {\n    return {};\n  }\n\n  @Authorize('transaction:read')\n  public async execute(\n    request: GetTransactionRequestDTO,\n    context?: GetTransactionContext\n  ): Promise<Result<Transaction>> {\n    // if ('transactionId' in request) {\n    //   const transactionOrError = await this.getTransaction(request);\n    //   if (transactionOrError.isFailure) {\n    //     return Result.fail<Invoice>(transactionOrError.error);\n    //   }\n    //   transactionId = TransactionId.create(\n    //     new UniqueEntityID(rawTransactionId)\n    //   );\n    // }\n\n    try {\n      // * System looks-up the transaction\n      const transactionOrError = await this.getTransaction(request);\n\n      if (transactionOrError.isFailure) {\n        return Result.fail<Transaction>(transactionOrError.error);\n      }\n\n      const transaction = transactionOrError.getValue();\n\n      // * This is where all the magic happens\n      return Result.ok<Transaction>(transaction);\n    } catch (err) {\n      console.log(err);\n      return Result.fail<Transaction>(err);\n    }\n  }\n}\n","// * Core Domain\nimport {UseCase} from '../../../../core/domain/UseCase';\nimport {Result} from '../../../../core/logic/Result';\n\nimport {Transaction} from '../../domain/Transaction';\nimport {TransactionRepoContract} from '../../repos/transactionRepo';\n\nexport class GetTransactionsUsecase\n  implements UseCase<{}, Result<Transaction[]>> {\n  private transactionRepo: TransactionRepoContract;\n\n  constructor(transactionRepo: TransactionRepoContract) {\n    this.transactionRepo = transactionRepo;\n  }\n\n  private async getTransactions(): Promise<Result<Transaction[]>> {\n    const transactions = await this.transactionRepo.getTransactionCollection();\n\n    if (!transactions) {\n      return Result.fail<Transaction[]>(`Couldn't list transactions.`);\n    }\n\n    return Result.ok<Transaction[]>(transactions);\n  }\n\n  public async execute(request: {}): Promise<Result<Transaction[]>> {\n    try {\n      // * System searches for transactions matching query params\n      const transactionsOrError = await this.getTransactions();\n      if (transactionsOrError.isFailure) {\n        return Result.fail<Transaction[]>(transactionsOrError.error);\n      }\n      const transactions = transactionsOrError.getValue();\n\n      // magic happens here\n      return Result.ok<Transaction[]>(transactions);\n    } catch (err) {\n      return Result.fail<Transaction[]>(err);\n    }\n  }\n}\n","/**\n * * Enumerates the possible user roles.\n */\nexport enum Roles {\n  CUSTOMER = 'CUSTOMER',\n  AUTHOR = 'AUTHOR',\n  PAYER = 'PAYER',\n  ADMIN = 'ADMIN',\n  SUPER_ADMIN = 'SUPER_ADMIN'\n}\n","// * Export Core Subdomain\nexport * from './core/domain/UniqueEntityID';\nexport * from './infrastructure/Repo';\n\n// * Export Shared Subdomain\nexport * from './domain/Amount';\nexport * from './domain/File';\nexport * from './domain/Name';\nexport * from './domain/Email';\nexport * from './domain/PhoneNumber';\nexport * from './domain/authorization';\n\n// * Export Article Subdomain\nexport * from './modules/articles/domain/Article';\nexport * from './modules/articles/dtos/ArticleDTO';\nexport * from './modules/articles/mappers/ArticleMap';\nexport * from './modules/articles/domain/ArticleId';\nexport * from './modules/articles/domain/Price';\nexport * from './modules/articles/domain/PriceId';\nexport * from './modules/articles/domain/PriceValue';\nexport * from './modules/articles/repos';\nexport * from './modules/articles/mappers/ArticleMap';\nexport * from './modules/articles/repos/priceRepo';\nexport * from './modules/articles/mappers/PriceMap';\n\n// * Export Transaction Subdomain\nexport * from './modules/transactions/domain/Transaction';\nexport * from './modules/transactions/domain/TransactionId';\nexport * from './modules/transactions/domain/TransactionAmount';\n// export * from './transactions/domain/events/transactionCreatedEvent';\nexport * from './modules/transactions/repos';\n// export * from './transactions/repos/transactionJsonRepo';\nexport * from './modules/transactions/usecases/getTransactions/getTransactions';\nexport * from './modules/transactions/usecases/getTransaction/getTransaction';\nexport * from './modules/transactions/usecases/createTransaction/createTransaction';\n// export * from './transactions/subscribers/AfterTransactionCreatedEvents';\nexport * from './modules/transactions/mappers/TransactionMap';\n\n// * Export Invoice Subdomain\nexport * from './modules/invoices/domain/Invoice';\nexport * from './modules/invoices/domain/InvoiceId';\nexport * from './modules/invoices/domain/InvoiceItem';\nexport * from './modules/invoices/domain/InvoiceItemId';\n// export * from './invoices/domain/events/invoiceSentEvent';\nexport * from './modules/invoices/usecases/getInvoiceDetails/getInvoiceDetails';\nexport * from './modules/invoices/usecases/deleteInvoice/deleteInvoice';\nexport * from './modules/invoices/repos';\nexport * from './modules/invoices/usecases/createInvoice/createInvoice';\n// export * from './invoices/usecases/sendInvoice/sendInvoice';\n// export * from './invoices/subscribers/AfterInvoiceSentEvents';\nexport * from './modules/invoices/mappers/InvoiceMap';\nexport * from './modules/invoices/mappers/InvoiceItemMap';\n\nexport {\n  PoliciesRegister as InvoicePoliciesRegister\n} from './modules/invoices/domain/policies/PoliciesRegister';\nexport * from './modules/invoices/domain/policies/UKVATHardCopyPolicy';\nexport * from './modules/invoices/domain/policies/UKVATTreatmentArticleProcessingChargesPolicy';\nexport * from './modules/invoices/domain/policies/VATTreatmentPublicationNotOwnedPolicy';\n\n// * Export Payment Subdomain\nexport {Payment} from './modules/payments/domain/Payment';\nexport {PaymentMethod} from './modules/payments/domain/PaymentMethod';\nexport * from './modules/payments/domain/PaymentId';\nexport * from './modules/payments/domain/PaymentMethodId';\nexport * from './modules/payments/mapper/Payment';\nexport * from './modules/payments/mapper/PaymentMethod';\n\nexport * from './modules/payments/repos/paymentRepo';\nexport * from './modules/payments/repos/paymentMethodRepo';\n\n// * Export Payer Subdomain\nexport {Payer} from './modules/payers/domain/Payer';\nexport * from './modules/payers/domain/PayerId';\nexport * from './modules/payers/domain/PayerName';\nexport * from './modules/payers/domain/PayerType';\nexport * from './modules/payers/domain/PayerTitle';\nexport * from './modules/payers/repos/payerRepo';\nexport * from './modules/payers/mapper/Payer';\n\n// * Export Address Subdomain\nexport * from './modules/addresses/domain/AddressId';\n\n// * Export Catalog Subdomain\nexport {CatalogItem} from './modules/catalogs/domain/CatalogItem';\n// export * from './modules/catalogs/domain/CatalogId';\nexport * from './modules/catalogs/repos';\nexport * from './modules/catalogs/mappers/CatalogMap';\nexport * from './modules/catalogs/usecases/catalogItems/addCatalogItemToCatalog/addCatalogItemToCatalogUseCase';\nexport * from './modules/catalogs/usecases/catalogItems/getAllCatalogItems/getAllCatalogItemsUseCase';\n\n// * Export User Subdomain\nexport {Roles} from './modules/users/domain/enums/Roles';\n\n// * Export Payments Subdomain\nexport * from './modules/payments/domain/contracts/PaymentModel';\nexport * from './modules/payments/domain/strategies/PaymentFactory';\nexport * from './modules/payments/domain/strategies/PaymentStrategy';\nexport * from './modules/payments/domain/strategies/CreditCardPayment';\nexport * from './modules/payments/domain/strategies/CreditCard';\n\n// * Export Coupon Subdomain\nexport * from './domain/reductions/ReductionFactory';\nexport * from './domain/reductions/Coupon';\nexport {\n  PoliciesRegister as ReductionsPoliciesRegister\n} from './domain/reductions/policies/PoliciesRegister';\nexport * from './domain/reductions/policies/WaivedCountryPolicy';\nexport * from './domain/reductions/policies/SanctionedCountryPolicy';\n\nexport * from './modules/coupons/mappers/CouponMap';\nexport * from './modules/coupons/repos';\n\n// * Export  Author Subdomain\nexport * from './modules/authors/domain/Author';\n\n// Infra\n// export * from './infra/http/app';\nexport {\n  BraintreeGateway\n} from './modules/payments/infrastructure/gateways/braintree/gateway';\nexport * from './infrastructure/database/knex';\n","export class TextUtil {\n  public static isUUID(text: string): boolean {\n    return new RegExp(\n      '\\x20[0-9a-f]{8}\\x20-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\x20[0-9a-f]{12}\\x20'\n    ).test(text);\n  }\n}\n","module.exports = require(\"accesscontrol-plus\");","module.exports = require(\"apollo-server\");","module.exports = require(\"braintree\");","module.exports = require(\"dotenv\");","module.exports = require(\"knex\");","module.exports = require(\"lodash\");","module.exports = require(\"path\");","module.exports = require(\"shallow-equal-object\");","module.exports = require(\"tslib\");","module.exports = require(\"uuid/v4\");"],"sourceRoot":""}