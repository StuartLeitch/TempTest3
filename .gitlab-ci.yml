image:
  name: $BUILD_IMAGE

stages:
  - setup
  - test
  - build
  - package
  - deploy

variables:
  AFFECTED_ARGS: "--base=remotes/origin/develop"
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  NODE_VERSION: 14.4.0
  BUILD_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  LATEST_BUILD_IMAGE: $CI_REGISTRY_IMAGE:latest
  AWS_REGION: "eu-west-1"
  BT_ENVIRONMENT: "sandbox"
  BT_MERCHANT_ID: "test-merchant-id"
  BT_PUBLIC_KEY: "test-public-key"
  BT_PRIVATE_KEY: "test-private-key"
  VAT_VALIDATION_SERVICE_ENDPOINT: "http://ec.europa.eu/taxation_customs/vies/checkVatService.wsdl"
  # AFFECTED_APPS: 'invoicing-graphql'
  AFFECTED_APPS: "invoicing-admin,invoicing-graphql,invoicing-web,reporting-backend"

Install Dependencies:
  interruptible: true
  allow_failure: false
  stage: setup
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  image: docker
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - ./tools/scripts/dockerize-builder.sh

Test:
  interruptible: true
  allow_failure: true
  stage: test
  # before_script: added to dockerfile.build
  #   - apt-get update
  #   - apt-get -y install imagemagick graphicsmagick
  script:
    - cd $HOME
    - mkdir report && chmod -R +x report
    - yarn run nx run-many --target=test --projects=$AFFECTED_APPS --configuration=production
    - yarn run ci:coverage
  coverage: '/Statements\s*:.*?\s+(\d+.\d+)%/'
  artifacts:
    paths:
      - report/
    # reports:
    #   cucumber:
    #     - report/apps/**/usage.txt
    #     - report/libs/**/usage.txt

Build:
  interruptible: true
  stage: build
  allow_failure: false
  script:
    - cd $HOME
    - yarn run nx run-many --target=build --projects=$AFFECTED_APPS --configuration=production
    # artifacts can't be uploaded outside $CI_PROJECT_DIR
    - mkdir $CI_PROJECT_DIR/.ci_status
    - echo "${AFFECTED_APPS//,/ }" > $CI_PROJECT_DIR/.ci_status/affected_apps
    - cp -r dist $CI_PROJECT_DIR
  artifacts:
    paths:
      - .ci_status
      - dist
  only:
    - develop

Package Images:dev:
  interruptible: true
  allow_failure: false
  stage: package
  image: docker
  variables:
    AWS_ACCESS_KEY_ID: $DEV_ACCESS_KEY
    AWS_SECRET_ACCESS_KEY: $DEV_SECRET_KEY
    AWS_REGISTRY: $DEV_AWS_REGISTRY
  when: manual
  before_script:
    - apk add --no-cache aws-cli
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  script:
    - $(aws ecr get-login --no-include-email --region "${AWS_REGION}")
    - export AFFECTED_APPS=$(cat .ci_status/affected_apps)
    - ./tools/scripts/dockerize-apps.sh
  dependencies:
    - Build
  artifacts:
    paths:
      - .ci_status
      - dist
  only:
    - develop

Deploy:dev:
  stage: deploy
  allow_failure: false
  dependencies:
    - Package Images:dev
  when: manual
  variables:
    AWS_ACCESS_KEY_ID: $DEV_ACCESS_KEY
    AWS_SECRET_ACCESS_KEY: $DEV_SECRET_KEY
    TENANT: hindawi
    NODE_ENV: dev
    AWS_REGISTRY: $DEV_AWS_REGISTRY
    COMMAND: build-manifests
  before_script:
    - apk add aws-cli --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin
  script:
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - export AFFECTED_APPS=$(cat .ci_status/affected_apps)
    - aws eks --region eu-west-1 update-kubeconfig --name hindawi-dev
    - kubectl config set-context --current --namespace=dev
    - cd $HOME
    - ./tools/scripts/deploy-ci.sh
    - cp -r dist-k8s $CI_PROJECT_DIR
  artifacts:
    paths:
      - dist-k8s
  only:
    - develop
# Pages:
#   interruptible: true
#   stage: deploy
#   script:
#     - mkdir -p public
#     - cp coverage/*.* public/
#     - mv public/index.html public/coverage.html
#   artifacts:
#     paths:
#       - public
#   dependencies:
#     - Test
#   only:
#     - develop
