scalar Date

enum InvoiceStatus {
  DRAFT
  ACTIVE
  FINAL
}

type Article {
  id: String
  journalId: String
  journalTitle: String
  customId: String
  created: Date
  title: String
  articleType: String
  authorEmail: String
  authorCountry: String
  authorSurname: String
  authorFirstName: String
}

type Transaction {
  id: String
  status: String
}

type InvoiceItem {
  id: String
  invoiceId: String
  manuscriptId: String
  price: Float
  rate: Float
  vat: Float
  vatnote: String
  article: Article
  dateCreated: Date
}

type Invoice {
  invoiceId: String
  dateCreated: String
  dateChanged: String
  dateIssued: String
  vat: Float
  charge: Float
  status: InvoiceStatus
  payer: Payer
  referenceNumber: String
  invoiceItem: InvoiceItem
  title: String
  price: Float
  customId: String
  type: String
}

type InvoiceId {
  invoiceId: String
}

input AddressInput {
  city: String
  country: String
  addressLine1: String
}

input PayerInput {
  id: String
  invoiceId: String
  type: PayerType
  name: String
  email: String
  organization: String
  vatId: String
  address: AddressInput
}

enum PayerType {
  INSTITUTION
  INDIVIDUAL
}

type Payer {
  id: String
  type: PayerType
  name: String
  email: String
  organization: String
  address: Address
  vatId: String
}

type Address {
  city: String
  country: String
  addressLine1: String
}

input CreditCardInput {
  amount: Float!
  cardNumber: String!
  expiration: String!
  cvv: String!
  postalCode: String
}

type Payment {
  id: String!
  invoiceId: String
  payerId: String
  paymentMethodId: String
  foreignPaymentId: String
  paymentProof: String
  amount: Float
  datePaid: Date
}

type PaymentMethod {
  id: String!
  name: String!
  isActive: Boolean
}

type Query {
  getPaymentMethods: [PaymentMethod]
  invoice(invoiceId: String): Invoice
  invoices: [Invoice]
  invoiceIdByManuscriptCustomId(customId: String): InvoiceId
  echo(value: String): String
}

type Mutation {
  confirmInvoice(payer: PayerInput!): Payer!
  createInvoice(totalAmount: Float): Invoice
  deleteInvoice(id: String!): Boolean
  setTransactionToActive(customId: String): Transaction
  creditCardPayment(
    invoiceId: String!
    payerId: String!
    paymentMethodId: String!
    creditCard: CreditCardInput!
  ): Payment!
  recordPayPalPayment(
    paymentMethodId: String!
    invoiceId: String!
    payerId: String!
    orderId: String!
  ): Payment!
  migratePayment(
    invoiceId: String!
    payerId: String!
    amount: Float
    datePaid: String
  ): Payment!
  migrateInvoice(
    invoiceId: String!
    vatValue: Float
    invoiceReference: String
    discount: Float
    APC: Float
    dateIssued: String
  ): Invoice
}
